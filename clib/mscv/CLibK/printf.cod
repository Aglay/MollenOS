; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.31101.0 

	TITLE	C:\Users\Philip\Documents\GitHub\MollenOS\clib\src\stdio\printf.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	_glb_printf_init
_DATA	SEGMENT
COMM	_glb_printf_lock:QWORD
_DATA	ENDS
_BSS	SEGMENT
_glb_printf_init DD 01H DUP (?)
_BSS	ENDS
PUBLIC	_printf
EXTRN	_spinlock_reset:PROC
EXTRN	_spinlock_acquire:PROC
EXTRN	_spinlock_release:PROC
EXTRN	_streamout:PROC
; Function compile flags: /Ogtp
; File c:\users\philip\documents\github\mollenos\clib\src\stdio\printf.c
;	COMDAT _printf
_TEXT	SEGMENT
_format$ = 8						; size = 4
_printf	PROC						; COMDAT

; 63   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 64   : 	//Decl
; 65   : 	va_list args;
; 66   : 	int result = 0;
; 67   : 
; 68   : 	//Sanity
; 69   : 	if (format == NULL)

  00003	83 7d 08 00	 cmp	 DWORD PTR _format$[ebp], 0
  00007	75 05		 jne	 SHORT $LN2@printf

; 70   : 		return -1;

  00009	83 c8 ff	 or	 eax, -1

; 91   : }

  0000c	5d		 pop	 ebp
  0000d	c3		 ret	 0
$LN2@printf:

; 71   : 
; 72   : 	//Init
; 73   : 	if (glb_printf_init != 0xDEADBEEF)

  0000e	81 3d 00 00 00
	00 ef be ad de	 cmp	 DWORD PTR _glb_printf_init, -559038737 ; deadbeefH
  00018	74 17		 je	 SHORT $LN1@printf

; 74   : 	{
; 75   : 		spinlock_reset(&glb_printf_lock);

  0001a	68 00 00 00 00	 push	 OFFSET _glb_printf_lock
  0001f	e8 00 00 00 00	 call	 _spinlock_reset
  00024	83 c4 04	 add	 esp, 4

; 76   : 		glb_printf_init = 0xDEADBEEF;

  00027	c7 05 00 00 00
	00 ef be ad de	 mov	 DWORD PTR _glb_printf_init, -559038737 ; deadbeefH
$LN1@printf:

; 77   : 	}
; 78   : 
; 79   : 	/* Acquire Lock */
; 80   : 	spinlock_acquire(&glb_printf_lock);

  00031	56		 push	 esi
  00032	68 00 00 00 00	 push	 OFFSET _glb_printf_lock
  00037	e8 00 00 00 00	 call	 _spinlock_acquire

; 81   : 
; 82   : 	/* Do the deed */
; 83   : 	va_start(args, format);
; 84   : 	result = streamout(NULL, 0x20000, format, args);

  0003c	8d 45 0c	 lea	 eax, DWORD PTR _format$[ebp+4]
  0003f	50		 push	 eax
  00040	ff 75 08	 push	 DWORD PTR _format$[ebp]
  00043	68 00 00 02 00	 push	 131072			; 00020000H
  00048	6a 00		 push	 0
  0004a	e8 00 00 00 00	 call	 _streamout

; 85   : 	va_end(args);
; 86   : 
; 87   : 	/* Release */
; 88   : 	spinlock_release(&glb_printf_lock);

  0004f	68 00 00 00 00	 push	 OFFSET _glb_printf_lock
  00054	8b f0		 mov	 esi, eax
  00056	e8 00 00 00 00	 call	 _spinlock_release
  0005b	83 c4 18	 add	 esp, 24			; 00000018H

; 89   : 
; 90   : 	return result;

  0005e	8b c6		 mov	 eax, esi
  00060	5e		 pop	 esi

; 91   : }

  00061	5d		 pop	 ebp
  00062	c3		 ret	 0
_printf	ENDP
_TEXT	ENDS
END
