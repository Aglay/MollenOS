; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.31101.0 

	TITLE	C:\Users\Philip\Documents\GitHub\MollenOS\clib\src\string\strtok.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	??_C@_00CNPNBAHC@?$AA@				; `string'
_DATA	SEGMENT
?ssave@?1??strtok@@9@9 DD FLAT:??_C@_00CNPNBAHC@?$AA@	; `strtok'::`2'::ssave
_DATA	ENDS
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
CONST	SEGMENT
??_C@_00CNPNBAHC@?$AA@ DB 00H				; `string'
CONST	ENDS
PUBLIC	_strtok_r
PUBLIC	_strtok
EXTRN	_strcspn:PROC
EXTRN	_strspn:PROC
; Function compile flags: /Ogtp
; File c:\users\philip\documents\github\mollenos\clib\src\string\strtok.c
;	COMDAT _strtok
_TEXT	SEGMENT
_str$ = 8						; size = 4
_delimiters$ = 12					; size = 4
_strtok	PROC						; COMDAT

; 33   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 34   : 	static char *ssave = "";
; 35   :     return strtok_r(str, delimiters, &ssave);

  00003	68 00 00 00 00	 push	 OFFSET ?ssave@?1??strtok@@9@9
  00008	ff 75 0c	 push	 DWORD PTR _delimiters$[ebp]
  0000b	ff 75 08	 push	 DWORD PTR _str$[ebp]
  0000e	e8 00 00 00 00	 call	 _strtok_r
  00013	83 c4 0c	 add	 esp, 12			; 0000000cH

; 36   : }

  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
_strtok	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\philip\documents\github\mollenos\clib\src\string\strtok.c
;	COMDAT _strtok_r
_TEXT	SEGMENT
_s$ = 8							; size = 4
_delimiters$ = 12					; size = 4
_lasts$ = 16						; size = 4
_strtok_r PROC						; COMDAT

; 17   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 18   : 	char *sbegin, *send;
; 19   :      sbegin = s ? s : *lasts;

  00004	8b 75 08	 mov	 esi, DWORD PTR _s$[ebp]
  00007	57		 push	 edi
  00008	8b 7d 10	 mov	 edi, DWORD PTR _lasts$[ebp]
  0000b	85 f6		 test	 esi, esi
  0000d	75 02		 jne	 SHORT $LN6@strtok_r
  0000f	8b 37		 mov	 esi, DWORD PTR [edi]
$LN6@strtok_r:

; 20   :      sbegin += strspn(sbegin, delimiters);

  00011	ff 75 0c	 push	 DWORD PTR _delimiters$[ebp]
  00014	56		 push	 esi
  00015	e8 00 00 00 00	 call	 _strspn
  0001a	03 f0		 add	 esi, eax
  0001c	83 c4 08	 add	 esp, 8

; 21   :      if (*sbegin == '\0') {

  0001f	80 3e 00	 cmp	 BYTE PTR [esi], 0
  00022	75 0c		 jne	 SHORT $LN2@strtok_r

; 22   :          *lasts = "";

  00024	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_C@_00CNPNBAHC@?$AA@

; 23   :          return NULL;

  0002a	33 c0		 xor	 eax, eax
  0002c	5f		 pop	 edi
  0002d	5e		 pop	 esi

; 30   : }

  0002e	5d		 pop	 ebp
  0002f	c3		 ret	 0
$LN2@strtok_r:

; 24   :      }
; 25   :      send = sbegin + strcspn(sbegin, delimiters);

  00030	ff 75 0c	 push	 DWORD PTR _delimiters$[ebp]
  00033	56		 push	 esi
  00034	e8 00 00 00 00	 call	 _strcspn
  00039	03 c6		 add	 eax, esi
  0003b	83 c4 08	 add	 esp, 8

; 26   :      if (*send != '\0')

  0003e	80 38 00	 cmp	 BYTE PTR [eax], 0
  00041	74 04		 je	 SHORT $LN1@strtok_r

; 27   :          *send++ = '\0';

  00043	c6 00 00	 mov	 BYTE PTR [eax], 0
  00046	40		 inc	 eax
$LN1@strtok_r:

; 28   :      *lasts = send;

  00047	89 07		 mov	 DWORD PTR [edi], eax

; 29   :      return sbegin;

  00049	8b c6		 mov	 eax, esi
  0004b	5f		 pop	 edi
  0004c	5e		 pop	 esi

; 30   : }

  0004d	5d		 pop	 ebp
  0004e	c3		 ret	 0
_strtok_r ENDP
_TEXT	ENDS
END
