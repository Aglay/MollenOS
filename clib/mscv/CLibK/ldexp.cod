; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.31101.0 

	TITLE	C:\Users\Philip\Documents\GitHub\MollenOS\clib\src\math\ldexp.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	_ldexp
EXTRN	__isnan:PROC
EXTRN	___errno:PROC
EXTRN	__fltused:DWORD
; Function compile flags: /Ogtp
; File c:\users\philip\documents\github\mollenos\clib\src\math\ldexp.c
;	COMDAT _ldexp
_TEXT	SEGMENT
_result$ = -16						; size = 8
___dy$ = -8						; size = 8
_value$ = 8						; size = 8
_exp$ = 16						; size = 4
_ldexp	PROC						; COMDAT

; 10   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H

; 11   :     register double result;
; 12   : #ifndef __GNUC__
; 13   :     register double __dy = (double)exp;

  00006	db 45 10	 fild	 DWORD PTR _exp$[ebp]

; 14   : #endif
; 15   : 
; 16   :     /* Check for value correctness
; 17   :      * and set errno if required
; 18   :      */
; 19   :     if (_isnan(value))

  00009	83 ec 08	 sub	 esp, 8
  0000c	dd 5d f8	 fstp	 QWORD PTR ___dy$[ebp]
  0000f	dd 45 08	 fld	 QWORD PTR _value$[ebp]
  00012	dd 1c 24	 fstp	 QWORD PTR [esp]
  00015	e8 00 00 00 00	 call	 __isnan
  0001a	83 c4 08	 add	 esp, 8
  0001d	85 c0		 test	 eax, eax
  0001f	74 0b		 je	 SHORT $LN1@ldexp

; 20   :     {
; 21   :         errno = EDOM;

  00021	e8 00 00 00 00	 call	 ___errno
  00026	c7 00 21 00 00
	00		 mov	 DWORD PTR [eax], 33	; 00000021H
$LN1@ldexp:

; 22   :     }
; 23   : 
; 24   : #ifdef __GNUC__
; 25   : #if defined(__clang__)
; 26   :     asm ("fild %[exp]\n"
; 27   :          "fscale\n"
; 28   :          "fstp %%st(1)\n"
; 29   :          : [result] "=t" (result)
; 30   :          : [value] "0" (value), [exp] "m" (exp));
; 31   : #else
; 32   :     asm ("fscale"
; 33   :          : "=t" (result)
; 34   :          : "0" (value), "u" ((double)exp)
; 35   :          : "1");
; 36   : #endif
; 37   : #else /* !__GNUC__ */
; 38   :     __asm
; 39   :     {
; 40   :         fld __dy

  0002c	dd 45 f8	 fld	 QWORD PTR ___dy$[ebp]

; 41   :         fld value

  0002f	dd 45 08	 fld	 QWORD PTR _value$[ebp]

; 42   :         fscale

  00032	d9 fd		 fscale

; 43   :         fstp result

  00034	dd 5d f0	 fstp	 QWORD PTR _result$[ebp]

; 44   :     }
; 45   : #endif /* !__GNUC__ */
; 46   :     return result;

  00037	dd 45 f0	 fld	 QWORD PTR _result$[ebp]

; 47   : }

  0003a	8b e5		 mov	 esp, ebp
  0003c	5d		 pop	 ebp
  0003d	c3		 ret	 0
_ldexp	ENDP
_TEXT	ENDS
END
