; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.30501.0 

	TITLE	C:\Users\Phail\Documents\GitHub\MollenOS\clib\src\math\frexp.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	_frexp
EXTRN	__fltused:DWORD
; Function compile flags: /Ogtp
; File c:\users\phail\documents\github\mollenos\clib\src\math\frexp.c
;	COMDAT _frexp
_TEXT	SEGMENT
___x$ = 8						; size = 8
_exptr$ = 16						; size = 4
_frexp	PROC						; COMDAT

; 10   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 55 10	 mov	 edx, DWORD PTR _exptr$[ebp]

; 11   : 	union
; 12   : 	{
; 13   : 		double*		__x;
; 14   : 		double_s*	x;
; 15   : 	} x;
; 16   : 
; 17   : 	x.__x = &__x;
; 18   : 
; 19   : 	if(exptr != NULL)

  00006	8b 4d 0c	 mov	 ecx, DWORD PTR ___x$[ebp+4]
  00009	85 d2		 test	 edx, edx
  0000b	74 11		 je	 SHORT $LN1@frexp

; 20   : 		*exptr = x.x->exponent - 0x3FE;

  0000d	8b c1		 mov	 eax, ecx
  0000f	c1 e8 14	 shr	 eax, 20			; 00000014H
  00012	25 ff 07 00 00	 and	 eax, 2047		; 000007ffH
  00017	2d fe 03 00 00	 sub	 eax, 1022		; 000003feH
  0001c	89 02		 mov	 DWORD PTR [edx], eax
$LN1@frexp:

; 21   : 
; 22   : 	x.x->exponent = 0x3FE;

  0001e	81 e1 ff ff ef
	bf		 and	 ecx, -1074790401	; bfefffffH
  00024	81 c9 00 00 e0
	3f		 or	 ecx, 1071644672		; 3fe00000H
  0002a	89 4d 0c	 mov	 DWORD PTR ___x$[ebp+4], ecx

; 23   : 
; 24   : 	return __x;

  0002d	dd 45 08	 fld	 QWORD PTR ___x$[ebp]

; 25   : }

  00030	5d		 pop	 ebp
  00031	c3		 ret	 0
_frexp	ENDP
_TEXT	ENDS
END
