; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\Users\Phail\Documents\GitHub\MollenOS\clib\src\string\strdup.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	_strdup
EXTRN	_kmalloc:PROC
EXTRN	_memcpy:PROC
; Function compile flags: /Ogtp
; File c:\users\phail\documents\github\mollenos\clib\src\string\strdup.c
;	COMDAT _strdup
_TEXT	SEGMENT
_str$ = 8						; size = 4
_strdup	PROC						; COMDAT

; 11   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx

; 12   : 	size_t len = strlen(str);

  00004	8b 5d 08	 mov	 ebx, DWORD PTR _str$[ebp]
  00007	56		 push	 esi
  00008	8b c3		 mov	 eax, ebx
  0000a	57		 push	 edi
  0000b	8d 50 01	 lea	 edx, DWORD PTR [eax+1]
  0000e	8b ff		 npad	 2
$LL3@strdup:
  00010	8a 08		 mov	 cl, BYTE PTR [eax]
  00012	40		 inc	 eax
  00013	84 c9		 test	 cl, cl
  00015	75 f9		 jne	 SHORT $LL3@strdup
  00017	2b c2		 sub	 eax, edx

; 13   : 	char * out = (char*)kmalloc(sizeof(char) * (len+1));

  00019	8d 70 01	 lea	 esi, DWORD PTR [eax+1]
  0001c	56		 push	 esi
  0001d	e8 00 00 00 00	 call	 _kmalloc

; 14   : 
; 15   : 	memcpy(out, str, len+1);

  00022	56		 push	 esi
  00023	8b f8		 mov	 edi, eax
  00025	53		 push	 ebx
  00026	57		 push	 edi
  00027	e8 00 00 00 00	 call	 _memcpy
  0002c	83 c4 10	 add	 esp, 16			; 00000010H

; 16   : 
; 17   : 	return out;

  0002f	8b c7		 mov	 eax, edi
  00031	5f		 pop	 edi
  00032	5e		 pop	 esi
  00033	5b		 pop	 ebx

; 18   : }

  00034	5d		 pop	 ebp
  00035	c3		 ret	 0
_strdup	ENDP
_TEXT	ENDS
END
