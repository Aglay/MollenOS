; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.31101.0 

	TITLE	C:\Users\Philip\Documents\GitHub\MollenOS\clib\src\setjmp\setjmp.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	_setjmp
PUBLIC	_longjmp
; Function compile flags: /Ogtp
; File c:\users\philip\documents\github\mollenos\clib\src\setjmp\setjmp.c
;	COMDAT _longjmp
_TEXT	SEGMENT
_env$ = 8						; size = 4
_value$ = 12						; size = 4
_longjmp PROC						; COMDAT

; 53   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi
  00005	57		 push	 edi

; 54   : 	__asm {
; 55   : 		
; 56   : 		/* get jmp_buf */
; 57   : 		mov		edi, 8[ebp]	

  00006	8b 7d 08	 mov	 edi, DWORD PTR [ebp+8]

; 58   : 		
; 59   : 		/* store retval in j->eax */
; 60   : 		mov		eax, 12[ebp]

  00009	8b 45 0c	 mov	 eax, DWORD PTR [ebp+12]

; 61   : 		test	eax,eax

  0000c	85 c0		 test	 eax, eax

; 62   : 		jne		s1

  0000e	75 01		 jne	 SHORT $s1$4

; 63   : 		inc		eax

  00010	40		 inc	 eax
$s1$4:

; 64   : 
; 65   : s1:
; 66   : 		mov		0[edi], eax

  00011	89 07		 mov	 DWORD PTR [edi], eax

; 67   : 
; 68   : 		mov		ebp, OFS_EBP[edi]

  00013	8b 6f 18	 mov	 ebp, DWORD PTR [edi+24]

; 69   : 
; 70   : 		//cli
; 71   : 		mov		esp, OFS_ESP[edi]

  00016	8b 67 1c	 mov	 esp, DWORD PTR [edi+28]

; 72   : 
; 73   : 		push	OFS_EIP[edi]	

  00019	ff 77 20	 push	 DWORD PTR [edi+32]

; 74   : 
; 75   : 		mov		eax, OFS_EAX[edi]

  0001c	8b 07		 mov	 eax, DWORD PTR [edi]

; 76   : 		mov		ebx, OFS_EBX[edi]

  0001e	8b 5f 04	 mov	 ebx, DWORD PTR [edi+4]

; 77   : 		mov		ecx, OFS_ECX[edi]

  00021	8b 4f 08	 mov	 ecx, DWORD PTR [edi+8]

; 78   : 		mov		edx, OFS_EDX[edi]

  00024	8b 57 0c	 mov	 edx, DWORD PTR [edi+12]

; 79   : 		mov		esi, OFS_ESI[edi]

  00027	8b 77 10	 mov	 esi, DWORD PTR [edi+16]

; 80   : 		mov		edi, OFS_EDI[edi]

  0002a	8b 7f 14	 mov	 edi, DWORD PTR [edi+20]

; 81   : 		//sti
; 82   : 
; 83   : 		ret

  0002d	c3		 ret	 0

; 84   : 	}
; 85   : }

  0002e	5f		 pop	 edi
  0002f	5e		 pop	 esi
  00030	5b		 pop	 ebx
  00031	5d		 pop	 ebp
  00032	c3		 ret	 0
_longjmp ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\philip\documents\github\mollenos\clib\src\setjmp\setjmp.c
;	COMDAT _setjmp
_TEXT	SEGMENT
_env$ = 8						; size = 4
_setjmp	PROC						; COMDAT

; 18   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	57		 push	 edi

; 19   : 	__asm {
; 20   : 		//Save edi
; 21   : 		mov		edi, 8[ebp]

  00004	8b 7d 08	 mov	 edi, DWORD PTR [ebp+8]

; 22   : 
; 23   : 		//Save stuff
; 24   : 		mov		OFS_EAX[edi], eax

  00007	89 07		 mov	 DWORD PTR [edi], eax

; 25   : 		mov		OFS_EBX[edi], ebx

  00009	89 5f 04	 mov	 DWORD PTR [edi+4], ebx

; 26   : 		mov		OFS_ECX[edi], ecx

  0000c	89 4f 08	 mov	 DWORD PTR [edi+8], ecx

; 27   : 		mov		OFS_EDX[edi], edx

  0000f	89 57 0c	 mov	 DWORD PTR [edi+12], edx

; 28   : 		mov		OFS_ESI[edi], esi

  00012	89 77 10	 mov	 DWORD PTR [edi+16], esi

; 29   : 
; 30   : 		//Get EDI
; 31   : 		mov		eax, [ebp-4]

  00015	8b 45 fc	 mov	 eax, DWORD PTR [ebp-4]

; 32   : 		mov		OFS_EDI[edi], eax

  00018	89 47 14	 mov	 DWORD PTR [edi+20], eax

; 33   : 
; 34   : 		//Get EBP
; 35   : 		mov		eax, 0[ebp]

  0001b	8b 45 00	 mov	 eax, DWORD PTR [ebp]

; 36   : 		mov		OFS_EBP[edi], eax

  0001e	89 47 18	 mov	 DWORD PTR [edi+24], eax

; 37   : 
; 38   : 		mov		eax, esp

  00021	8b c4		 mov	 eax, esp

; 39   : 		add		eax, 12

  00023	83 c0 0c	 add	 eax, 12			; 0000000cH

; 40   : 		mov		OFS_ESP[edi], eax

  00026	89 47 1c	 mov	 DWORD PTR [edi+28], eax

; 41   : 
; 42   : 		mov		eax, 4[ebp]

  00029	8b 45 04	 mov	 eax, DWORD PTR [ebp+4]

; 43   : 		mov		OFS_EIP[edi], eax

  0002c	89 47 20	 mov	 DWORD PTR [edi+32], eax

; 44   : 	}
; 45   : 
; 46   : 	return 0;

  0002f	33 c0		 xor	 eax, eax
  00031	5f		 pop	 edi

; 47   : }

  00032	5d		 pop	 ebp
  00033	c3		 ret	 0
_setjmp	ENDP
_TEXT	ENDS
END
