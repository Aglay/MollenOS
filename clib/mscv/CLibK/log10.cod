; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.30501.0 

	TITLE	C:\Users\Phail\Documents\GitHub\MollenOS\clib\src\math\log10.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

_BSS	SEGMENT
_zero	DQ	01H DUP (?)
_BSS	ENDS
CONST	SEGMENT
_two54	DQ	04350000000000000r		; 1.80144e+016
_ivln10	DQ	03fdbcb7b1526e50er		; 0.434294
_log10_2hi DQ	03fd34413509f6000r		; 0.30103
_log10_2lo DQ	03d59fef311f12b36r		; 3.69424e-013
CONST	ENDS
PUBLIC	_log10
PUBLIC	__real@3d59fef311f12b36
PUBLIC	__real@3fd34413509f6000
PUBLIC	__real@3fdbcb7b1526e50e
PUBLIC	__real@4350000000000000
PUBLIC	__real@c350000000000000
EXTRN	__libm_sse2_log_precise:PROC
EXTRN	__fltused:DWORD
;	COMDAT __real@c350000000000000
CONST	SEGMENT
__real@c350000000000000 DQ 0c350000000000000r	; -1.80144e+016
CONST	ENDS
;	COMDAT __real@4350000000000000
CONST	SEGMENT
__real@4350000000000000 DQ 04350000000000000r	; 1.80144e+016
CONST	ENDS
;	COMDAT __real@3fdbcb7b1526e50e
CONST	SEGMENT
__real@3fdbcb7b1526e50e DQ 03fdbcb7b1526e50er	; 0.434294
CONST	ENDS
;	COMDAT __real@3fd34413509f6000
CONST	SEGMENT
__real@3fd34413509f6000 DQ 03fd34413509f6000r	; 0.30103
CONST	ENDS
;	COMDAT __real@3d59fef311f12b36
CONST	SEGMENT
__real@3d59fef311f12b36 DQ 03d59fef311f12b36r	; 3.69424e-013
CONST	ENDS
; Function compile flags: /Ogtp
; File c:\users\phail\documents\github\mollenos\clib\src\math\log10.c
;	COMDAT _log10
_TEXT	SEGMENT
tv219 = 8						; size = 8
tv215 = 8						; size = 8
tv210 = 8						; size = 8
tv203 = 8						; size = 8
_x$ = 8							; size = 8
_log10	PROC						; COMDAT

; 62   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 63   : 	double y,z;
; 64   : 	int i,k,hx;
; 65   : 	unsigned lx;
; 66   : 
; 67   : 	hx = __HI(x);	/* high word of x */
; 68   : 	lx = __LO(x);	/* low word of x */
; 69   : 
; 70   :         k=0;
; 71   :         if (hx < 0x00100000) {                  /* x < 2**-1022  */

  00003	8b 55 0c	 mov	 edx, DWORD PTR _x$[ebp+4]
  00006	33 c9		 xor	 ecx, ecx
  00008	81 fa 00 00 10
	00		 cmp	 edx, 1048576		; 00100000H
  0000e	7d 5c		 jge	 SHORT $LN7@log10

; 72   :             if (((hx&0x7fffffff)|lx)==0)

  00010	8b c2		 mov	 eax, edx
  00012	25 ff ff ff 7f	 and	 eax, 2147483647		; 7fffffffH
  00017	0b 45 08	 or	 eax, DWORD PTR _x$[ebp]
  0001a	75 1a		 jne	 SHORT $LN3@log10

; 73   :                 return -two54/zero;             /* log(+-0)=-inf */

  0001c	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@c350000000000000
  00024	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR _zero
  0002c	f2 0f 11 45 08	 movsd	 QWORD PTR tv219[ebp], xmm0
  00031	dd 45 08	 fld	 QWORD PTR tv219[ebp]

; 86   : }

  00034	5d		 pop	 ebp
  00035	c3		 ret	 0
$LN3@log10:

; 74   :             if (hx<0) return (x-x)/zero;        /* log(-#) = NaN */

  00036	f2 0f 10 45 08	 movsd	 xmm0, QWORD PTR _x$[ebp]
  0003b	85 d2		 test	 edx, edx
  0003d	79 16		 jns	 SHORT $LN2@log10
  0003f	f2 0f 5c c0	 subsd	 xmm0, xmm0
  00043	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR _zero
  0004b	f2 0f 11 45 08	 movsd	 QWORD PTR tv215[ebp], xmm0
  00050	dd 45 08	 fld	 QWORD PTR tv215[ebp]

; 86   : }

  00053	5d		 pop	 ebp
  00054	c3		 ret	 0
$LN2@log10:

; 75   :             k -= 54; x *= two54; /* subnormal number, scale up x */

  00055	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@4350000000000000
  0005d	b9 ca ff ff ff	 mov	 ecx, -54		; ffffffcaH
  00062	f2 0f 11 45 08	 movsd	 QWORD PTR _x$[ebp], xmm0
  00067	8b 55 0c	 mov	 edx, DWORD PTR _x$[ebp+4]
  0006a	eb 05		 jmp	 SHORT $LN4@log10
$LN7@log10:
  0006c	f2 0f 10 45 08	 movsd	 xmm0, QWORD PTR _x$[ebp]
$LN4@log10:

; 76   :             hx = __HI(x);                /* high word of x */
; 77   :         }
; 78   : 	if (hx >= 0x7ff00000) return x+x;

  00071	81 fa 00 00 f0
	7f		 cmp	 edx, 2146435072		; 7ff00000H
  00077	7c 0e		 jl	 SHORT $LN1@log10
  00079	f2 0f 58 c0	 addsd	 xmm0, xmm0
  0007d	f2 0f 11 45 08	 movsd	 QWORD PTR tv210[ebp], xmm0
  00082	dd 45 08	 fld	 QWORD PTR tv210[ebp]

; 86   : }

  00085	5d		 pop	 ebp
  00086	c3		 ret	 0
$LN1@log10:

; 79   : 	k += (hx>>20)-1023;

  00087	8b c2		 mov	 eax, edx
  00089	81 c1 01 fc ff
	ff		 add	 ecx, -1023		; fffffc01H
  0008f	c1 f8 14	 sar	 eax, 20			; 00000014H

; 80   : 	i  = ((unsigned)k&0x80000000)>>31;
; 81   :         hx = (hx&0x000fffff)|((0x3ff-i)<<20);

  00092	81 e2 ff ff 0f
	00		 and	 edx, 1048575		; 000fffffH
  00098	03 c1		 add	 eax, ecx
  0009a	8b c8		 mov	 ecx, eax
  0009c	c1 e9 1f	 shr	 ecx, 31			; 0000001fH
  0009f	56		 push	 esi

; 82   :         y  = (double)(k+i);

  000a0	8d 34 01	 lea	 esi, DWORD PTR [ecx+eax]

; 83   :         __HI(x) = hx;

  000a3	b8 ff 03 00 00	 mov	 eax, 1023		; 000003ffH
  000a8	2b c1		 sub	 eax, ecx
  000aa	c1 e0 14	 shl	 eax, 20			; 00000014H
  000ad	0b c2		 or	 eax, edx
  000af	89 45 0c	 mov	 DWORD PTR _x$[ebp+4], eax

; 84   : 	z  = y*log10_2lo + ivln10*log(x);

  000b2	f2 0f 10 45 08	 movsd	 xmm0, QWORD PTR _x$[ebp]
  000b7	e8 00 00 00 00	 call	 __libm_sse2_log_precise
  000bc	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fdbcb7b1526e50e
  000c4	66 0f 6e d6	 movd	 xmm2, esi
  000c8	f3 0f e6 d2	 cvtdq2pd xmm2, xmm2
  000cc	5e		 pop	 esi
  000cd	66 0f 28 ca	 movapd	 xmm1, xmm2

; 85   : 	return  z+y*log10_2hi;

  000d1	f2 0f 59 15 00
	00 00 00	 mulsd	 xmm2, QWORD PTR __real@3fd34413509f6000
  000d9	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@3d59fef311f12b36
  000e1	f2 0f 58 c1	 addsd	 xmm0, xmm1
  000e5	f2 0f 58 c2	 addsd	 xmm0, xmm2
  000e9	f2 0f 11 45 08	 movsd	 QWORD PTR tv203[ebp], xmm0
  000ee	dd 45 08	 fld	 QWORD PTR tv203[ebp]

; 86   : }

  000f1	5d		 pop	 ebp
  000f2	c3		 ret	 0
_log10	ENDP
_TEXT	ENDS
END
