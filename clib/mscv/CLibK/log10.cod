; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.40629.0 

	TITLE	C:\Users\Philip\Documents\GitHub\MollenOS\clib\src\math\log10.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

_BSS	SEGMENT
_zero	DQ	01H DUP (?)
_BSS	ENDS
CONST	SEGMENT
_two54	DQ	04350000000000000r		; 1.80144e+016
_ivln10	DQ	03fdbcb7b1526e50er		; 0.434294
_log10_2hi DQ	03fd34413509f6000r		; 0.30103
_log10_2lo DQ	03d59fef311f12b36r		; 3.69424e-013
CONST	ENDS
PUBLIC	_log10
PUBLIC	__real@3d59fef311f12b36
PUBLIC	__real@3fd34413509f6000
PUBLIC	__real@3fdbcb7b1526e50e
PUBLIC	__real@4350000000000000
PUBLIC	__real@c350000000000000
EXTRN	__CIlog:PROC
EXTRN	__fltused:DWORD
;	COMDAT __real@c350000000000000
CONST	SEGMENT
__real@c350000000000000 DQ 0c350000000000000r	; -1.80144e+016
CONST	ENDS
;	COMDAT __real@4350000000000000
CONST	SEGMENT
__real@4350000000000000 DQ 04350000000000000r	; 1.80144e+016
CONST	ENDS
;	COMDAT __real@3fdbcb7b1526e50e
CONST	SEGMENT
__real@3fdbcb7b1526e50e DQ 03fdbcb7b1526e50er	; 0.434294
CONST	ENDS
;	COMDAT __real@3fd34413509f6000
CONST	SEGMENT
__real@3fd34413509f6000 DQ 03fd34413509f6000r	; 0.30103
CONST	ENDS
;	COMDAT __real@3d59fef311f12b36
CONST	SEGMENT
__real@3d59fef311f12b36 DQ 03d59fef311f12b36r	; 3.69424e-013
CONST	ENDS
; Function compile flags: /Ogtp
; File c:\users\philip\documents\github\mollenos\clib\src\math\log10.c
;	COMDAT _log10
_TEXT	SEGMENT
_y$1$ = -8						; size = 8
tv216 = -4						; size = 4
_x$ = 8							; size = 8
_log10	PROC						; COMDAT

; 62   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 63   : 	double y,z;
; 64   : 	int i,k,hx;
; 65   : 	unsigned lx;
; 66   : 
; 67   : 	hx = __HI(x);	/* high word of x */
; 68   : 	lx = __LO(x);	/* low word of x */
; 69   : 
; 70   :         k=0;
; 71   :         if (hx < 0x00100000) {                  /* x < 2**-1022  */

  00003	8b 55 0c	 mov	 edx, DWORD PTR _x$[ebp+4]
  00006	83 ec 08	 sub	 esp, 8
  00009	33 c9		 xor	 ecx, ecx
  0000b	81 fa 00 00 10
	00		 cmp	 edx, 1048576		; 00100000H
  00011	7d 42		 jge	 SHORT $LN7@log10

; 72   :             if (((hx&0x7fffffff)|lx)==0)

  00013	8b c2		 mov	 eax, edx
  00015	25 ff ff ff 7f	 and	 eax, 2147483647		; 7fffffffH
  0001a	0b 45 08	 or	 eax, DWORD PTR _x$[ebp]
  0001d	75 10		 jne	 SHORT $LN3@log10

; 73   :                 return -two54/zero;             /* log(+-0)=-inf */

  0001f	dd 05 00 00 00
	00		 fld	 QWORD PTR __real@c350000000000000
  00025	dc 35 00 00 00
	00		 fdiv	 QWORD PTR _zero

; 86   : }

  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c3		 ret	 0
$LN3@log10:

; 74   :             if (hx<0) return (x-x)/zero;        /* log(-#) = NaN */

  0002f	dd 45 08	 fld	 QWORD PTR _x$[ebp]
  00032	85 d2		 test	 edx, edx
  00034	79 0c		 jns	 SHORT $LN2@log10
  00036	dc e8		 fsub	 ST(0), ST(0)
  00038	dc 35 00 00 00
	00		 fdiv	 QWORD PTR _zero

; 86   : }

  0003e	8b e5		 mov	 esp, ebp
  00040	5d		 pop	 ebp
  00041	c3		 ret	 0
$LN2@log10:

; 75   :             k -= 54; x *= two54; /* subnormal number, scale up x */

  00042	dc 0d 00 00 00
	00		 fmul	 QWORD PTR __real@4350000000000000
  00048	b9 ca ff ff ff	 mov	 ecx, -54		; ffffffcaH
  0004d	dd 55 08	 fst	 QWORD PTR _x$[ebp]
  00050	8b 55 0c	 mov	 edx, DWORD PTR _x$[ebp+4]
  00053	eb 03		 jmp	 SHORT $LN4@log10
$LN7@log10:
  00055	dd 45 08	 fld	 QWORD PTR _x$[ebp]
$LN4@log10:

; 76   :             hx = __HI(x);                /* high word of x */
; 77   :         }
; 78   : 	if (hx >= 0x7ff00000) return x+x;

  00058	81 fa 00 00 f0
	7f		 cmp	 edx, 2146435072		; 7ff00000H
  0005e	7c 06		 jl	 SHORT $LN10@log10
  00060	dc c0		 fadd	 ST(0), ST(0)

; 86   : }

  00062	8b e5		 mov	 esp, ebp
  00064	5d		 pop	 ebp
  00065	c3		 ret	 0
$LN10@log10:

; 79   : 	k += (hx>>20)-1023;

  00066	8b c2		 mov	 eax, edx
  00068	81 c1 01 fc ff
	ff		 add	 ecx, -1023		; fffffc01H
  0006e	c1 f8 14	 sar	 eax, 20			; 00000014H
  00071	dd d8		 fstp	 ST(0)
  00073	03 c1		 add	 eax, ecx

; 80   : 	i  = ((unsigned)k&0x80000000)>>31;
; 81   :         hx = (hx&0x000fffff)|((0x3ff-i)<<20);

  00075	81 e2 ff ff 0f
	00		 and	 edx, 1048575		; 000fffffH
  0007b	8b c8		 mov	 ecx, eax
  0007d	c1 e9 1f	 shr	 ecx, 31			; 0000001fH

; 82   :         y  = (double)(k+i);

  00080	03 c1		 add	 eax, ecx
  00082	89 45 fc	 mov	 DWORD PTR tv216[ebp], eax

; 83   :         __HI(x) = hx;

  00085	b8 ff 03 00 00	 mov	 eax, 1023		; 000003ffH
  0008a	db 45 fc	 fild	 DWORD PTR tv216[ebp]
  0008d	2b c1		 sub	 eax, ecx
  0008f	c1 e0 14	 shl	 eax, 20			; 00000014H
  00092	0b c2		 or	 eax, edx
  00094	89 45 0c	 mov	 DWORD PTR _x$[ebp+4], eax
  00097	dd 5d f8	 fstp	 QWORD PTR _y$1$[ebp]

; 84   : 	z  = y*log10_2lo + ivln10*log(x);

  0009a	dd 45 08	 fld	 QWORD PTR _x$[ebp]
  0009d	e8 00 00 00 00	 call	 __CIlog
  000a2	dc 0d 00 00 00
	00		 fmul	 QWORD PTR __real@3fdbcb7b1526e50e
  000a8	dd 45 f8	 fld	 QWORD PTR _y$1$[ebp]
  000ab	dd 05 00 00 00
	00		 fld	 QWORD PTR __real@3d59fef311f12b36
  000b1	d8 c9		 fmul	 ST(0), ST(1)
  000b3	de c2		 faddp	 ST(2), ST(0)

; 85   : 	return  z+y*log10_2hi;

  000b5	dc 0d 00 00 00
	00		 fmul	 QWORD PTR __real@3fd34413509f6000
  000bb	de c1		 faddp	 ST(1), ST(0)

; 86   : }

  000bd	8b e5		 mov	 esp, ebp
  000bf	5d		 pop	 ebp
  000c0	c3		 ret	 0
_log10	ENDP
_TEXT	ENDS
END
