; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.40629.0 

	TITLE	C:\Users\Philip\Documents\GitHub\MollenOS\clib\src\math\isnan.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

CONST	SEGMENT
_twoTo1023 DQ	07fe0000000000000r		; 8.98847e+307
_twoToM1022 DQ	00010000000000000r		; 2.22507e-308
CONST	ENDS
PUBLIC	___isnan
PUBLIC	___isnanf
PUBLIC	___isnanl
EXTRN	__fltused:DWORD
; Function compile flags: /Ogtp
; File c:\users\philip\documents\github\mollenos\clib\src\math\isnan.c
;	COMDAT ___isnanl
_TEXT	SEGMENT
_u$ = -16						; size = 16
_e$ = 8							; size = 8
___isnanl PROC						; COMDAT

; 52   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H

; 53   : 	union IEEEl2bits u = { 0 };
; 54   : 
; 55   : 	u.e = e;

  00006	dd 45 08	 fld	 QWORD PTR _e$[ebp]
  00009	33 c0		 xor	 eax, eax
  0000b	dd 5d f0	 fstp	 QWORD PTR _u$[ebp]

; 56   : 	mask_nbit_l(u);

  0000e	8b 4d f4	 mov	 ecx, DWORD PTR _u$[ebp+4]
  00011	89 45 fc	 mov	 DWORD PTR _u$[ebp+12], eax
  00014	81 e1 ff ff ff
	7f		 and	 ecx, 2147483647		; 7fffffffH

; 57   : 	return (u.bits.exp == 32767 && (u.bits.manl != 0 || u.bits.manh != 0));

  0001a	25 ff 7f 00 00	 and	 eax, 32767		; 00007fffH
  0001f	3d ff 7f 00 00	 cmp	 eax, 32767		; 00007fffH
  00024	75 13		 jne	 SHORT $LN4@isnanl
  00026	83 7d f0 00	 cmp	 DWORD PTR _u$[ebp], 0
  0002a	75 04		 jne	 SHORT $LN3@isnanl
  0002c	85 c9		 test	 ecx, ecx
  0002e	74 09		 je	 SHORT $LN4@isnanl
$LN3@isnanl:
  00030	b8 01 00 00 00	 mov	 eax, 1

; 58   : }

  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
$LN4@isnanl:

; 57   : 	return (u.bits.exp == 32767 && (u.bits.manl != 0 || u.bits.manh != 0));

  00039	33 c0		 xor	 eax, eax

; 58   : }

  0003b	8b e5		 mov	 esp, ebp
  0003d	5d		 pop	 ebp
  0003e	c3		 ret	 0
___isnanl ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\philip\documents\github\mollenos\clib\src\math\isnan.c
;	COMDAT ___isnanf
_TEXT	SEGMENT
_u$ = 8							; size = 4
_f$ = 8							; size = 4
___isnanf PROC						; COMDAT

; 44   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 45   : 	union IEEEf2bits u;
; 46   : 
; 47   : 	u.f = f;

  00003	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _f$[ebp]
  00008	f3 0f 11 45 08	 movss	 DWORD PTR _u$[ebp], xmm0

; 48   : 	return (u.bits.exp == 255 && u.bits.man != 0);

  0000d	8b 45 08	 mov	 eax, DWORD PTR _u$[ebp]
  00010	8b c8		 mov	 ecx, eax
  00012	81 e1 00 00 80
	7f		 and	 ecx, 2139095040		; 7f800000H
  00018	81 f9 00 00 80
	7f		 cmp	 ecx, 2139095040		; 7f800000H
  0001e	75 0e		 jne	 SHORT $LN3@isnanf
  00020	a9 ff ff 7f 00	 test	 eax, 8388607		; 007fffffH
  00025	74 07		 je	 SHORT $LN3@isnanf
  00027	b8 01 00 00 00	 mov	 eax, 1

; 49   : }

  0002c	5d		 pop	 ebp
  0002d	c3		 ret	 0
$LN3@isnanf:

; 48   : 	return (u.bits.exp == 255 && u.bits.man != 0);

  0002e	33 c0		 xor	 eax, eax

; 49   : }

  00030	5d		 pop	 ebp
  00031	c3		 ret	 0
___isnanf ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\philip\documents\github\mollenos\clib\src\math\isnan.c
;	COMDAT ___isnan
_TEXT	SEGMENT
_u$ = 8							; size = 8
_d$ = 8							; size = 8
___isnan PROC						; COMDAT

; 36   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 37   : 	union IEEEd2bits u;
; 38   : 
; 39   : 	u.d = d;

  00003	dd 45 08	 fld	 QWORD PTR _d$[ebp]
  00006	dd 5d 08	 fstp	 QWORD PTR _u$[ebp]

; 40   : 	return (u.bits.exp == 2047 && (u.bits.manl != 0 || u.bits.manh != 0));

  00009	8b 4d 0c	 mov	 ecx, DWORD PTR _u$[ebp+4]
  0000c	8b c1		 mov	 eax, ecx
  0000e	25 00 00 f0 7f	 and	 eax, 2146435072		; 7ff00000H
  00013	3d 00 00 f0 7f	 cmp	 eax, 2146435072		; 7ff00000H
  00018	75 15		 jne	 SHORT $LN4@isnan
  0001a	83 7d 08 00	 cmp	 DWORD PTR _u$[ebp], 0
  0001e	75 08		 jne	 SHORT $LN3@isnan
  00020	f7 c1 ff ff 0f
	00		 test	 ecx, 1048575		; 000fffffH
  00026	74 07		 je	 SHORT $LN4@isnan
$LN3@isnan:
  00028	b8 01 00 00 00	 mov	 eax, 1

; 41   : }

  0002d	5d		 pop	 ebp
  0002e	c3		 ret	 0
$LN4@isnan:

; 40   : 	return (u.bits.exp == 2047 && (u.bits.manl != 0 || u.bits.manh != 0));

  0002f	33 c0		 xor	 eax, eax

; 41   : }

  00031	5d		 pop	 ebp
  00032	c3		 ret	 0
___isnan ENDP
_TEXT	ENDS
END
