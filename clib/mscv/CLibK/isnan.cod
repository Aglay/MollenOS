; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.31101.0 

	TITLE	C:\Users\Philip\Documents\GitHub\MollenOS\clib\src\math\isnan.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	__finite
PUBLIC	__isnan
; Function compile flags: /Ogtp
; File c:\users\philip\documents\github\mollenos\clib\src\math\isnan.c
;	COMDAT __isnan
_TEXT	SEGMENT
___x$ = 8						; size = 8
__isnan	PROC						; COMDAT

; 9    : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 10   : 	union
; 11   : 	{
; 12   : 		double*   __x;
; 13   : 		double_s*   x;
; 14   : 	} x;
; 15   : 
; 16   :     x.__x = &__x;
; 17   : 	
; 18   : 	return ( x.x->exponent == 0x7ff  && ( x.x->mantissah != 0 || x.x->mantissal != 0 ));

  00003	8b 4d 0c	 mov	 ecx, DWORD PTR ___x$[ebp+4]
  00006	8b c1		 mov	 eax, ecx
  00008	25 00 00 f0 7f	 and	 eax, 2146435072		; 7ff00000H
  0000d	3d 00 00 f0 7f	 cmp	 eax, 2146435072		; 7ff00000H
  00012	75 15		 jne	 SHORT $LN4@isnan
  00014	f7 c1 ff ff 0f
	00		 test	 ecx, 1048575		; 000fffffH
  0001a	75 06		 jne	 SHORT $LN3@isnan
  0001c	83 7d 08 00	 cmp	 DWORD PTR ___x$[ebp], 0
  00020	74 07		 je	 SHORT $LN4@isnan
$LN3@isnan:
  00022	b8 01 00 00 00	 mov	 eax, 1

; 19   : }

  00027	5d		 pop	 ebp
  00028	c3		 ret	 0
$LN4@isnan:

; 10   : 	union
; 11   : 	{
; 12   : 		double*   __x;
; 13   : 		double_s*   x;
; 14   : 	} x;
; 15   : 
; 16   :     x.__x = &__x;
; 17   : 	
; 18   : 	return ( x.x->exponent == 0x7ff  && ( x.x->mantissah != 0 || x.x->mantissal != 0 ));

  00029	33 c0		 xor	 eax, eax

; 19   : }

  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
__isnan	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\philip\documents\github\mollenos\clib\src\math\isnan.c
;	COMDAT __finite
_TEXT	SEGMENT
___x$ = 8						; size = 8
__finite PROC						; COMDAT

; 25   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 26   : 	union
; 27   : 	{
; 28   : 		double*   __x;
; 29   : 		double_s*   x;
; 30   : 	} x;
; 31   : 
; 32   : 	x.__x = &__x;
; 33   : 
; 34   :     return ((x.x->exponent & 0x7ff) != 0x7ff);

  00003	8b 4d 0c	 mov	 ecx, DWORD PTR ___x$[ebp+4]
  00006	33 c0		 xor	 eax, eax
  00008	81 e1 00 00 f0
	7f		 and	 ecx, 2146435072		; 7ff00000H
  0000e	81 f9 00 00 f0
	7f		 cmp	 ecx, 2146435072		; 7ff00000H
  00014	0f 95 c0	 setne	 al

; 35   : }

  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
__finite ENDP
_TEXT	ENDS
END
