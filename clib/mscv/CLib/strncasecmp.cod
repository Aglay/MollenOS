; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\Users\Phail\Documents\GitHub\MollenOS\clib\src\string\strncasecmp.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	___tolower
EXTRN	__ctype:BYTE
; Function compile flags: /Ogtp
; File c:\users\phail\documents\github\mollenos\clib\include\ctype.h
;	COMDAT ___tolower
_TEXT	SEGMENT
_c$ = 8							; size = 1
___tolower PROC						; COMDAT

; 61   : __inline unsigned char __tolower(unsigned char c) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 62   :         return isupper(c) ? c - ('A' - 'a') : c;

  00003	0f b6 45 08	 movzx	 eax, BYTE PTR _c$[ebp]
  00007	f6 80 00 00 00
	00 01		 test	 BYTE PTR __ctype[eax], 1
  0000e	74 03		 je	 SHORT $LN4@tolower
  00010	83 c0 20	 add	 eax, 32			; 00000020H
$LN4@tolower:

; 63   : }

  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
___tolower ENDP
_TEXT	ENDS
PUBLIC	_strncasecmp
; Function compile flags: /Ogtp
; File c:\users\phail\documents\github\mollenos\clib\src\string\strncasecmp.c
;	COMDAT _strncasecmp
_TEXT	SEGMENT
_s1$ = 8						; size = 4
_s2$ = 12						; size = 4
_n$ = 16						; size = 4
_strncasecmp PROC					; COMDAT

; 10   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 11   : 	const unsigned char *ucs1 = (const unsigned char *) s1;
; 12   : 	const unsigned char *ucs2 = (const unsigned char *) s2;

  00003	8b 55 0c	 mov	 edx, DWORD PTR _s2$[ebp]
  00006	56		 push	 esi
  00007	8b 75 08	 mov	 esi, DWORD PTR _s1$[ebp]
  0000a	57		 push	 edi

; 13   : 	int d = 0;
; 14   : 	for ( ; n != 0; n--)

  0000b	8b 7d 10	 mov	 edi, DWORD PTR _n$[ebp]
  0000e	33 c0		 xor	 eax, eax
  00010	85 ff		 test	 edi, edi
  00012	74 3f		 je	 SHORT $LN17@strncasecm
  00014	53		 push	 ebx
  00015	bb 01 00 00 00	 mov	 ebx, 1
  0001a	8d 9b 00 00 00
	00		 npad	 6
$LL5@strncasecm:

; 15   : 	{
; 16   : 		const int c1 = tolower(*ucs1++);

  00020	0f b6 06	 movzx	 eax, BYTE PTR [esi]
  00023	84 98 00 00 00
	00		 test	 BYTE PTR __ctype[eax], bl
  00029	74 03		 je	 SHORT $LN10@strncasecm
  0002b	83 c0 20	 add	 eax, 32			; 00000020H
$LN10@strncasecm:

; 17   : 		const int c2 = tolower(*ucs2++);

  0002e	0f b6 0a	 movzx	 ecx, BYTE PTR [edx]
  00031	03 f3		 add	 esi, ebx
  00033	0f b6 c0	 movzx	 eax, al
  00036	84 99 00 00 00
	00		 test	 BYTE PTR __ctype[ecx], bl
  0003c	74 03		 je	 SHORT $LN14@strncasecm
  0003e	83 c1 20	 add	 ecx, 32			; 00000020H
$LN14@strncasecm:
  00041	0f b6 c9	 movzx	 ecx, cl
  00044	03 d3		 add	 edx, ebx

; 18   : 		
; 19   : 		if (((d = c1 - c2) != 0) || (c2 == '\0'))

  00046	2b c1		 sub	 eax, ecx
  00048	75 08		 jne	 SHORT $LN22@strncasecm
  0004a	85 c9		 test	 ecx, ecx
  0004c	74 04		 je	 SHORT $LN22@strncasecm

; 13   : 	int d = 0;
; 14   : 	for ( ; n != 0; n--)

  0004e	2b fb		 sub	 edi, ebx
  00050	75 ce		 jne	 SHORT $LL5@strncasecm
$LN22@strncasecm:
  00052	5b		 pop	 ebx
$LN17@strncasecm:
  00053	5f		 pop	 edi
  00054	5e		 pop	 esi

; 20   : 			break;
; 21   : 	}
; 22   : 	return d;
; 23   : }

  00055	5d		 pop	 ebp
  00056	c3		 ret	 0
_strncasecmp ENDP
_TEXT	ENDS
END
