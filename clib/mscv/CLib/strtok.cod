; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\Users\Phail\Documents\GitHub\MollenOS\clib\src\string\strtok.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

_BSS	SEGMENT
$SG1502	DB	01H DUP (?)
$SG1492	DB	01H DUP (?)
_BSS	ENDS
_DATA	SEGMENT
?ssave@?1??strtok@@9@9 DD FLAT:$SG1502			; `strtok'::`2'::ssave
_DATA	ENDS
PUBLIC	_strtok_r
EXTRN	_strcspn:PROC
EXTRN	_strspn:PROC
; Function compile flags: /Ogtp
; File c:\users\phail\documents\github\mollenos\clib\src\string\strtok.c
;	COMDAT _strtok_r
_TEXT	SEGMENT
_s$ = 8							; size = 4
_delimiters$ = 12					; size = 4
_lasts$ = 16						; size = 4
_strtok_r PROC						; COMDAT

; 17   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx

; 18   : 	char *sbegin, *send;
; 19   :      sbegin = s ? s : *lasts;

  00004	8b 5d 10	 mov	 ebx, DWORD PTR _lasts$[ebp]
  00007	56		 push	 esi
  00008	8b 75 08	 mov	 esi, DWORD PTR _s$[ebp]
  0000b	57		 push	 edi
  0000c	85 f6		 test	 esi, esi
  0000e	75 02		 jne	 SHORT $LN6@strtok_r
  00010	8b 33		 mov	 esi, DWORD PTR [ebx]
$LN6@strtok_r:

; 20   :      sbegin += strspn(sbegin, delimiters);

  00012	8b 7d 0c	 mov	 edi, DWORD PTR _delimiters$[ebp]
  00015	57		 push	 edi
  00016	56		 push	 esi
  00017	e8 00 00 00 00	 call	 _strspn
  0001c	03 f0		 add	 esi, eax
  0001e	83 c4 08	 add	 esp, 8

; 21   :      if (*sbegin == '\0') {

  00021	80 3e 00	 cmp	 BYTE PTR [esi], 0
  00024	75 0d		 jne	 SHORT $LN2@strtok_r

; 22   :          *lasts = "";

  00026	5f		 pop	 edi
  00027	5e		 pop	 esi
  00028	c7 03 00 00 00
	00		 mov	 DWORD PTR [ebx], OFFSET $SG1492

; 23   :          return NULL;

  0002e	33 c0		 xor	 eax, eax
  00030	5b		 pop	 ebx

; 30   : }

  00031	5d		 pop	 ebp
  00032	c3		 ret	 0
$LN2@strtok_r:

; 24   :      }
; 25   :      send = sbegin + strcspn(sbegin, delimiters);

  00033	57		 push	 edi
  00034	56		 push	 esi
  00035	e8 00 00 00 00	 call	 _strcspn
  0003a	03 c6		 add	 eax, esi
  0003c	83 c4 08	 add	 esp, 8

; 26   :      if (*send != '\0')

  0003f	80 38 00	 cmp	 BYTE PTR [eax], 0
  00042	74 04		 je	 SHORT $LN1@strtok_r

; 27   :          *send++ = '\0';

  00044	c6 00 00	 mov	 BYTE PTR [eax], 0
  00047	40		 inc	 eax
$LN1@strtok_r:

; 28   :      *lasts = send;

  00048	89 03		 mov	 DWORD PTR [ebx], eax
  0004a	5f		 pop	 edi

; 29   :      return sbegin;

  0004b	8b c6		 mov	 eax, esi
  0004d	5e		 pop	 esi
  0004e	5b		 pop	 ebx

; 30   : }

  0004f	5d		 pop	 ebp
  00050	c3		 ret	 0
_strtok_r ENDP
_TEXT	ENDS
PUBLIC	_strtok
; Function compile flags: /Ogtp
;	COMDAT _strtok
_TEXT	SEGMENT
_str$ = 8						; size = 4
_delimiters$ = 12					; size = 4
_strtok	PROC						; COMDAT

; 33   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 34   : 	static char *ssave = "";
; 35   :     return strtok_r(str, delimiters, &ssave);

  00003	8b 45 0c	 mov	 eax, DWORD PTR _delimiters$[ebp]
  00006	8b 4d 08	 mov	 ecx, DWORD PTR _str$[ebp]
  00009	68 00 00 00 00	 push	 OFFSET ?ssave@?1??strtok@@9@9
  0000e	50		 push	 eax
  0000f	51		 push	 ecx
  00010	e8 00 00 00 00	 call	 _strtok_r
  00015	83 c4 0c	 add	 esp, 12			; 0000000cH

; 36   : }

  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
_strtok	ENDP
_TEXT	ENDS
END
