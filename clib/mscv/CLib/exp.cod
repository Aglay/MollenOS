; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.30501.0 

	TITLE	C:\Users\Phail\Documents\GitHub\MollenOS\clib\src\math\exp.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	_exp
EXTRN	__fltused:DWORD
; Function compile flags: /Ogtp
; File c:\users\phail\documents\github\mollenos\clib\src\math\exp.c
;	COMDAT _exp
_TEXT	SEGMENT
___val$ = -8						; size = 8
___x$ = 8						; size = 8
_exp	PROC						; COMDAT

; 29   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 30   : #ifdef __GNUC__
; 31   :   register double __value, __exponent;
; 32   :   __asm __volatile__
; 33   :     ("fldl2e                    # e^x = 2^(x * log2(e))\n\t"
; 34   :      "fmul      %%st(1)         # x * log2(e)\n\t"
; 35   :      "fst       %%st(1)\n\t"
; 36   :      "frndint                   # int(x * log2(e))\n\t"
; 37   :      "fxch\n\t"
; 38   :      "fsub      %%st(1)         # fract(x * log2(e))\n\t"
; 39   :      "f2xm1                     # 2^(fract(x * log2(e))) - 1\n\t"
; 40   :      : "=t" (__value), "=u" (__exponent) : "0" (__x));
; 41   :   __value += 1.0;
; 42   :   __asm __volatile__
; 43   :     ("fscale"
; 44   :      : "=t" (__value) : "0" (__value), "u" (__exponent));
; 45   : 
; 46   :   return __value;
; 47   : #else
; 48   :   register double __val;
; 49   :   __asm
; 50   :   {
; 51   :     fld1                        // store 1.0 for later use

  00006	d9 e8		 fld1

; 52   :     fld __x

  00008	dd 45 08	 fld	 QWORD PTR ___x$[ebp]

; 53   :     fldl2e                      // e^x = 2^(x * log2(e))

  0000b	d9 ea		 fldl2e

; 54   :     fmul    st,st(1)            // x * log2(e)

  0000d	d8 c9		 fmul	 ST(0), ST(1)

; 55   :     fld     st(0)

  0000f	d9 c0		 fld	 ST(0)

; 56   :     frndint                     // int(x * log2(e))

  00011	d9 fc		 frndint

; 57   :     fsub    st,st(1)            // fract(x * log2(e))

  00013	d8 e1		 fsub	 ST(0), ST(1)

; 58   :     fxch

  00015	d9 c9		 fxch	 ST(1)

; 59   :     f2xm1                       // 2^(fract(x * log2(e))) - 1

  00017	d9 f0		 f2xm1

; 60   :     fadd    st,st(3)            // + 1.0

  00019	d8 c3		 fadd	 ST(0), ST(3)

; 61   :     fscale

  0001b	d9 fd		 fscale

; 62   :     fstp __val

  0001d	dd 5d f8	 fstp	 QWORD PTR ___val$[ebp]

; 63   :   }
; 64   :   return __val;

  00020	dd 45 f8	 fld	 QWORD PTR ___val$[ebp]

; 65   : #endif /*__GNUC__*/
; 66   : }

  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
_exp	ENDP
_TEXT	ENDS
END
