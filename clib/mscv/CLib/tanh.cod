; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.40629.0 

	TITLE	C:\Users\Philip\Documents\GitHub\MollenOS\clib\src\math\tanh.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	_tanh
PUBLIC	__real@3ff0000000000000
PUBLIC	__real@4049000000000000
PUBLIC	__real@bff0000000000000
PUBLIC	__real@c049000000000000
EXTRN	__libm_sse2_exp_precise:PROC
EXTRN	__fltused:DWORD
;	COMDAT __real@c049000000000000
CONST	SEGMENT
__real@c049000000000000 DQ 0c049000000000000r	; -50
CONST	ENDS
;	COMDAT __real@bff0000000000000
CONST	SEGMENT
__real@bff0000000000000 DQ 0bff0000000000000r	; -1
CONST	ENDS
;	COMDAT __real@4049000000000000
CONST	SEGMENT
__real@4049000000000000 DQ 04049000000000000r	; 50
CONST	ENDS
;	COMDAT __real@3ff0000000000000
CONST	SEGMENT
__real@3ff0000000000000 DQ 03ff0000000000000r	; 1
CONST	ENDS
; Function compile flags: /Ogtp
; File c:\users\philip\documents\github\mollenos\clib\src\math\tanh.c
;	COMDAT _tanh
_TEXT	SEGMENT
tv131 = 8						; size = 8
_x$ = 8							; size = 8
_tanh	PROC						; COMDAT

; 13   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 14   : 	if (x > 50)

  00003	f2 0f 10 4d 08	 movsd	 xmm1, QWORD PTR _x$[ebp]
  00008	66 0f 2f 0d 00
	00 00 00	 comisd	 xmm1, QWORD PTR __real@4049000000000000
  00010	76 04		 jbe	 SHORT $LN4@tanh

; 15   : 		return 1;

  00012	d9 e8		 fld1

; 23   : 	}
; 24   : }

  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
$LN4@tanh:

; 16   : 	else if (x < -50)

  00016	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@c049000000000000
  0001e	66 0f 2f c1	 comisd	 xmm0, xmm1
  00022	76 08		 jbe	 SHORT $LN2@tanh

; 17   : 		return -1;

  00024	dd 05 00 00 00
	00		 fld	 QWORD PTR __real@bff0000000000000

; 23   : 	}
; 24   : }

  0002a	5d		 pop	 ebp
  0002b	c3		 ret	 0
$LN2@tanh:

; 18   : 	else
; 19   : 	{
; 20   : 		const double ebig = exp(x);

  0002c	0f 28 c1	 movaps	 xmm0, xmm1
  0002f	e8 00 00 00 00	 call	 __libm_sse2_exp_precise

; 21   : 		const double esmall = 1.0/ebig;

  00034	f2 0f 10 15 00
	00 00 00	 movsd	 xmm2, QWORD PTR __real@3ff0000000000000

; 22   : 		return (ebig - esmall) / (ebig + esmall);

  0003c	66 0f 28 c8	 movapd	 xmm1, xmm0
  00040	f2 0f 5e d0	 divsd	 xmm2, xmm0
  00044	f2 0f 5c ca	 subsd	 xmm1, xmm2
  00048	f2 0f 58 d0	 addsd	 xmm2, xmm0
  0004c	f2 0f 5e ca	 divsd	 xmm1, xmm2
  00050	f2 0f 11 4d 08	 movsd	 QWORD PTR tv131[ebp], xmm1
  00055	dd 45 08	 fld	 QWORD PTR tv131[ebp]

; 23   : 	}
; 24   : }

  00058	5d		 pop	 ebp
  00059	c3		 ret	 0
_tanh	ENDP
_TEXT	ENDS
END
