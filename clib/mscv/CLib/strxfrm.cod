; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\Users\Phail\Documents\GitHub\MollenOS\clib\src\string\strxfrm.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	_strxfrm
; Function compile flags: /Ogtp
; File c:\users\phail\documents\github\mollenos\clib\src\string\strxfrm.c
;	COMDAT _strxfrm
_TEXT	SEGMENT
_destination$ = 8					; size = 4
_source$ = 12						; size = 4
_num$ = 16						; size = 4
_strxfrm PROC						; COMDAT

; 9    : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 10   : 	size_t res;
; 11   : 	res = 0;
; 12   : 
; 13   : 	while (num-- > 0)

  00003	8b 4d 0c	 mov	 ecx, DWORD PTR _source$[ebp]
  00006	56		 push	 esi
  00007	8b 75 10	 mov	 esi, DWORD PTR _num$[ebp]
  0000a	33 c0		 xor	 eax, eax
  0000c	57		 push	 edi
  0000d	85 f6		 test	 esi, esi
  0000f	74 15		 je	 SHORT $LN11@strxfrm
  00011	8b 7d 08	 mov	 edi, DWORD PTR _destination$[ebp]
  00014	2b f9		 sub	 edi, ecx
$LL6@strxfrm:

; 14   : 	{
; 15   : 		if ((*destination++ = *source++) != '\0')

  00016	8a 11		 mov	 dl, BYTE PTR [ecx]
  00018	88 14 0f	 mov	 BYTE PTR [edi+ecx], dl
  0001b	4e		 dec	 esi
  0001c	41		 inc	 ecx
  0001d	84 d2		 test	 dl, dl
  0001f	74 16		 je	 SHORT $LN7@strxfrm

; 16   : 			++res;

  00021	40		 inc	 eax
  00022	85 f6		 test	 esi, esi
  00024	75 f0		 jne	 SHORT $LL6@strxfrm
$LN11@strxfrm:

; 17   : 		else
; 18   : 			return res;
; 19   : 	}
; 20   : 
; 21   : 	while (*source)

  00026	80 39 00	 cmp	 BYTE PTR [ecx], 0
  00029	74 0c		 je	 SHORT $LN7@strxfrm
  0002b	2b c8		 sub	 ecx, eax
  0002d	8d 49 00	 npad	 3
$LL2@strxfrm:

; 22   : 	{
; 23   : 		++source;
; 24   : 		++res;

  00030	40		 inc	 eax
  00031	80 3c 01 00	 cmp	 BYTE PTR [ecx+eax], 0
  00035	75 f9		 jne	 SHORT $LL2@strxfrm
$LN7@strxfrm:
  00037	5f		 pop	 edi
  00038	5e		 pop	 esi

; 25   : 	}
; 26   : 
; 27   : 	return res;
; 28   : }

  00039	5d		 pop	 ebp
  0003a	c3		 ret	 0
_strxfrm ENDP
_TEXT	ENDS
END
