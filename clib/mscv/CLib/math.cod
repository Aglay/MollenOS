; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.40629.0 

	TITLE	C:\Users\Philip\Documents\GitHub\MollenOS\clib\crt\math.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	__CIpow
PUBLIC	__CIsinh
PUBLIC	__CIcosh
PUBLIC	__CItanh
PUBLIC	__CIexp
PUBLIC	__CIlog10
PUBLIC	__CIcos
PUBLIC	__CIlog
PUBLIC	__CIsin
PUBLIC	__CIsqrt
EXTRN	__CIcosh:PROC
EXTRN	__CIsinh:PROC
EXTRN	__CItanh:PROC
EXTRN	__libm_sse2_cos_precise:PROC
EXTRN	__libm_sse2_exp_precise:PROC
EXTRN	__libm_sse2_log10_precise:PROC
EXTRN	__libm_sse2_log_precise:PROC
EXTRN	__libm_sse2_pow_precise:PROC
EXTRN	__libm_sse2_sin_precise:PROC
EXTRN	__libm_sse2_sqrt_precise:PROC
EXTRN	__fltused:DWORD
; Function compile flags: /Ogtp
; File c:\users\philip\documents\github\mollenos\clib\crt\math.c
;	COMDAT __CIsqrt
_TEXT	SEGMENT
tv67 = -8						; size = 8
_x$ = -8						; size = 8
__CIsqrt PROC						; COMDAT

; 146  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 e4 f8	 and	 esp, -8			; fffffff8H
  00006	83 ec 08	 sub	 esp, 8

; 147  : 	FPU_DOUBLE(x);

  00009	dd 1c 24	 fstp	 QWORD PTR _x$[esp+8]
  0000c	9b		 fwait

; 148  : 	return sqrt(x);

  0000d	f2 0f 10 04 24	 movsd	 xmm0, QWORD PTR _x$[esp+8]
  00012	e8 00 00 00 00	 call	 __libm_sse2_sqrt_precise
  00017	f2 0f 11 04 24	 movsd	 QWORD PTR tv67[esp+8], xmm0
  0001c	dd 04 24	 fld	 QWORD PTR tv67[esp+8]

; 149  : }

  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c3		 ret	 0
__CIsqrt ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\philip\documents\github\mollenos\clib\crt\math.c
;	COMDAT __CIsin
_TEXT	SEGMENT
tv67 = -8						; size = 8
_x$ = -8						; size = 8
__CIsin	PROC						; COMDAT

; 137  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 138  : 	FPU_DOUBLE(x);

  00006	dd 5d f8	 fstp	 QWORD PTR _x$[ebp]
  00009	9b		 fwait

; 139  : 	return sin(x);

  0000a	f2 0f 10 45 f8	 movsd	 xmm0, QWORD PTR _x$[ebp]
  0000f	e8 00 00 00 00	 call	 __libm_sse2_sin_precise
  00014	f2 0f 11 45 f8	 movsd	 QWORD PTR tv67[ebp], xmm0
  00019	dd 45 f8	 fld	 QWORD PTR tv67[ebp]

; 140  : }

  0001c	8b e5		 mov	 esp, ebp
  0001e	5d		 pop	 ebp
  0001f	c3		 ret	 0
__CIsin	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\philip\documents\github\mollenos\clib\crt\math.c
;	COMDAT __CIlog
_TEXT	SEGMENT
tv67 = -8						; size = 8
_x$ = -8						; size = 8
__CIlog	PROC						; COMDAT

; 128  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 129  : 	FPU_DOUBLE(x);

  00006	dd 5d f8	 fstp	 QWORD PTR _x$[ebp]
  00009	9b		 fwait

; 130  : 	return log(x);

  0000a	f2 0f 10 45 f8	 movsd	 xmm0, QWORD PTR _x$[ebp]
  0000f	e8 00 00 00 00	 call	 __libm_sse2_log_precise
  00014	f2 0f 11 45 f8	 movsd	 QWORD PTR tv67[ebp], xmm0
  00019	dd 45 f8	 fld	 QWORD PTR tv67[ebp]

; 131  : }

  0001c	8b e5		 mov	 esp, ebp
  0001e	5d		 pop	 ebp
  0001f	c3		 ret	 0
__CIlog	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\philip\documents\github\mollenos\clib\crt\math.c
;	COMDAT __CIcos
_TEXT	SEGMENT
tv67 = -8						; size = 8
_x$ = -8						; size = 8
__CIcos	PROC						; COMDAT

; 119  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 120  : 	FPU_DOUBLE(x);

  00006	dd 5d f8	 fstp	 QWORD PTR _x$[ebp]
  00009	9b		 fwait

; 121  : 	return cos(x);

  0000a	f2 0f 10 45 f8	 movsd	 xmm0, QWORD PTR _x$[ebp]
  0000f	e8 00 00 00 00	 call	 __libm_sse2_cos_precise
  00014	f2 0f 11 45 f8	 movsd	 QWORD PTR tv67[ebp], xmm0
  00019	dd 45 f8	 fld	 QWORD PTR tv67[ebp]

; 122  : }

  0001c	8b e5		 mov	 esp, ebp
  0001e	5d		 pop	 ebp
  0001f	c3		 ret	 0
__CIcos	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\philip\documents\github\mollenos\clib\crt\math.c
;	COMDAT __CIlog10
_TEXT	SEGMENT
tv67 = -8						; size = 8
_x$ = -8						; size = 8
__CIlog10 PROC						; COMDAT

; 101  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 102  : 	FPU_DOUBLE(x);

  00006	dd 5d f8	 fstp	 QWORD PTR _x$[ebp]
  00009	9b		 fwait

; 103  : 	return log10(x);

  0000a	f2 0f 10 45 f8	 movsd	 xmm0, QWORD PTR _x$[ebp]
  0000f	e8 00 00 00 00	 call	 __libm_sse2_log10_precise
  00014	f2 0f 11 45 f8	 movsd	 QWORD PTR tv67[ebp], xmm0
  00019	dd 45 f8	 fld	 QWORD PTR tv67[ebp]

; 104  : }

  0001c	8b e5		 mov	 esp, ebp
  0001e	5d		 pop	 ebp
  0001f	c3		 ret	 0
__CIlog10 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\philip\documents\github\mollenos\clib\crt\math.c
;	COMDAT __CIexp
_TEXT	SEGMENT
tv67 = -8						; size = 8
_x$ = -8						; size = 8
__CIexp	PROC						; COMDAT

; 92   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 93   : 	FPU_DOUBLE(x);

  00006	dd 5d f8	 fstp	 QWORD PTR _x$[ebp]
  00009	9b		 fwait

; 94   : 	return exp(x);

  0000a	f2 0f 10 45 f8	 movsd	 xmm0, QWORD PTR _x$[ebp]
  0000f	e8 00 00 00 00	 call	 __libm_sse2_exp_precise
  00014	f2 0f 11 45 f8	 movsd	 QWORD PTR tv67[ebp], xmm0
  00019	dd 45 f8	 fld	 QWORD PTR tv67[ebp]

; 95   : }

  0001c	8b e5		 mov	 esp, ebp
  0001e	5d		 pop	 ebp
  0001f	c3		 ret	 0
__CIexp	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\philip\documents\github\mollenos\clib\crt\math.c
;	COMDAT __CItanh
_TEXT	SEGMENT
_x$ = -8						; size = 8
__CItanh PROC						; COMDAT

; 47   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 48   : 	FPU_DOUBLE(x);

  00006	dd 5d f8	 fstp	 QWORD PTR _x$[ebp]
  00009	9b		 fwait

; 49   : 	return tanh(x);

  0000a	dd 45 f8	 fld	 QWORD PTR _x$[ebp]
  0000d	e8 00 00 00 00	 call	 __CItanh

; 50   : }

  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
__CItanh ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\philip\documents\github\mollenos\clib\crt\math.c
;	COMDAT __CIcosh
_TEXT	SEGMENT
_x$ = -8						; size = 8
__CIcosh PROC						; COMDAT

; 38   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 39   : 	FPU_DOUBLE(x);

  00006	dd 5d f8	 fstp	 QWORD PTR _x$[ebp]
  00009	9b		 fwait

; 40   : 	return cosh(x);

  0000a	dd 45 f8	 fld	 QWORD PTR _x$[ebp]
  0000d	e8 00 00 00 00	 call	 __CIcosh

; 41   : }

  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
__CIcosh ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\philip\documents\github\mollenos\clib\crt\math.c
;	COMDAT __CIsinh
_TEXT	SEGMENT
_x$ = -8						; size = 8
__CIsinh PROC						; COMDAT

; 29   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 30   : 	FPU_DOUBLE(x);

  00006	dd 5d f8	 fstp	 QWORD PTR _x$[ebp]
  00009	9b		 fwait

; 31   : 	return sinh(x);

  0000a	dd 45 f8	 fld	 QWORD PTR _x$[ebp]
  0000d	e8 00 00 00 00	 call	 __CIsinh

; 32   : }

  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
__CIsinh ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\philip\documents\github\mollenos\clib\crt\math.c
;	COMDAT __CIpow
_TEXT	SEGMENT
tv68 = -16						; size = 8
_y$ = -16						; size = 8
_x$ = -8						; size = 8
__CIpow	PROC						; COMDAT

; 11   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H

; 12   : 	FPU_DOUBLES(x, y);

  00006	dd 5d f8	 fstp	 QWORD PTR _x$[ebp]
  00009	9b		 fwait
  0000a	dd 5d f0	 fstp	 QWORD PTR _y$[ebp]
  0000d	9b		 fwait

; 13   : 	return pow(x, y);

  0000e	f2 0f 10 45 f8	 movsd	 xmm0, QWORD PTR _x$[ebp]
  00013	f2 0f 10 4d f0	 movsd	 xmm1, QWORD PTR _y$[ebp]
  00018	e8 00 00 00 00	 call	 __libm_sse2_pow_precise
  0001d	f2 0f 11 45 f0	 movsd	 QWORD PTR tv68[ebp], xmm0
  00022	dd 45 f0	 fld	 QWORD PTR tv68[ebp]

; 14   : }

  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c3		 ret	 0
__CIpow	ENDP
_TEXT	ENDS
END
