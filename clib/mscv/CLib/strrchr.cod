; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\Users\Phail\Documents\GitHub\MollenOS\clib\src\string\strrchr.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	_strrchr
EXTRN	_strchr:PROC
; Function compile flags: /Ogtp
; File c:\users\phail\documents\github\mollenos\clib\src\string\strrchr.c
;	COMDAT _strrchr
_TEXT	SEGMENT
_s$ = 8							; size = 4
_i$ = 12						; size = 4
_strrchr PROC						; COMDAT

; 40   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 41   : 	const char *last = NULL;
; 42   : 
; 43   : 	if (i)

  00004	8b 75 0c	 mov	 esi, DWORD PTR _i$[ebp]
  00007	57		 push	 edi
  00008	33 ff		 xor	 edi, edi
  0000a	85 f6		 test	 esi, esi
  0000c	74 29		 je	 SHORT $LN4@strrchr

; 44   : 	{
; 45   : 		while ((s=strchr(s, i)))

  0000e	8b 45 08	 mov	 eax, DWORD PTR _s$[ebp]
  00011	56		 push	 esi
  00012	50		 push	 eax
  00013	e8 00 00 00 00	 call	 _strchr
  00018	83 c4 08	 add	 esp, 8
  0001b	85 c0		 test	 eax, eax
  0001d	74 12		 je	 SHORT $LN9@strrchr
  0001f	90		 npad	 1
$LL3@strrchr:

; 46   : 		{
; 47   : 			last = s;

  00020	8b f8		 mov	 edi, eax

; 48   : 			s++;

  00022	40		 inc	 eax
  00023	56		 push	 esi
  00024	50		 push	 eax
  00025	e8 00 00 00 00	 call	 _strchr
  0002a	83 c4 08	 add	 esp, 8
  0002d	85 c0		 test	 eax, eax
  0002f	75 ef		 jne	 SHORT $LL3@strrchr
$LN9@strrchr:

; 54   : 	}
; 55   : 		  
; 56   : 	return (char *) last;

  00031	8b c7		 mov	 eax, edi
  00033	5f		 pop	 edi
  00034	5e		 pop	 esi

; 57   : }

  00035	5d		 pop	 ebp
  00036	c3		 ret	 0
$LN4@strrchr:

; 49   : 		}
; 50   : 	}
; 51   : 	else
; 52   : 	{
; 53   : 		last = strchr(s, i);

  00037	8b 4d 08	 mov	 ecx, DWORD PTR _s$[ebp]
  0003a	6a 00		 push	 0
  0003c	51		 push	 ecx
  0003d	e8 00 00 00 00	 call	 _strchr
  00042	83 c4 08	 add	 esp, 8
  00045	5f		 pop	 edi
  00046	5e		 pop	 esi

; 57   : }

  00047	5d		 pop	 ebp
  00048	c3		 ret	 0
_strrchr ENDP
_TEXT	ENDS
END
