# Makefile for Vali to build mesa targets
# - Util
# - mApi
# - gallium
# - mesa
# llvmpipe
CC = $(CROSS)/bin/clang
CXX = $(CROSS)/bin/clang++
LD = $(CROSS)/bin/lld-link
GLFLAGS = /nodefaultlib /machine:X86 /subsystem:native

# Userspace environment compilation flags
MESA_VERSION = `cat VERSION`
CONFIGFLAGS = -mssse3 -msse4.1 -Wno-delete-non-virtual-dtor -Wno-unused-private-field -Wno-sometimes-uninitialized -Wno-return-type -DHAVE_LLVM=0x0700 -DPACKAGE_VERSION="\"$(MESA_VERSION)\"" -DPACKAGE_BUGREPORT="\"https://bugs.freedesktop.org/enter_bug.cgi?product=Mesa\""
GUCFLAGS = -U_WIN32 -fms-extensions -Wall -nostdlib -nostdinc -O3 -DMOLLENOS -m32 -Di386 -D__i386__ --target=i386-pc-win32-itanium-coff $(CONFIGFLAGS) -I$(INCLUDES)
GUCXXFLAGS = -U_WIN32 -fms-extensions -Wall -nostdlib -nostdinc -O3 -DMOLLENOS -m32 -Di386 -D__i386__ --target=i386-pc-win32-itanium-coff $(CONFIGFLAGS) -I$(INCLUDES)/cxx -I$(INCLUDES)
GUCLIBRARIES = $(LIBRARIES)/libcrt.lib $(LIBRARIES)/libclang.lib $(LIBRARIES)/libc.lib $(LIBRARIES)/libunwind.lib $(LIBRARIES)/libm.lib $(LIBRARIES)/zlib.lib
GUCXXLIBRARIES = $(LIBRARIES)/libcxx.lib $(LIBRARIES)/libclang.lib $(LIBRARIES)/libc.lib $(LIBRARIES)/libunwind.lib $(LIBRARIES)/libm.lib $(LIBRARIES)/zlib.lib
LDAPP = $(GLFLAGS) /lldmap /entry:__CrtConsoleEntry $(GUCXXLIBRARIES)
LDSO = $(GLFLAGS) /dll /lldmap /entry:__CrtLibraryEntry $(GUCXXLIBRARIES)

INSTALL_DLL = $(wildcard build/vali-x86/*.dll)
INSTALL_APP = $(wildcard build/vali-x86/*.app)
INSTALL_LIB = $(INSTALL_DLL:.dll=.lib)

#include src/compiler/Makefile.sources

#############################################
# Sources for util library
#############################################
UTIL_SOURCES_GEN_H = src/util/xmlpool/options.h
UTIL_SOURCES_GEN_C = src/util/format_srgb.c
UTIL_SOURCES_GEN_CXX = 
UTIL_SOURCES_C = $(filter-out src/util/xmlconfig.c $(UTIL_SOURCES_GEN_C), $(wildcard src/util/*.c))
UTIL_SOURCES_CXX = $(wildcard src/util/*.cpp)
UTIL_INCLUDES = -Iinclude -Isrc -Isrc/mesa -Isrc/mapi -Isrc/gallium/auxiliary -Isrc/gallium/include -Isrc/util
UTIL_OBJECTS_C = $(UTIL_SOURCES_C:.c=.o) $(UTIL_SOURCES_GEN_C:.c=.o)
UTIL_OBJECTS_CXX = $(UTIL_SOURCES_CXX:.cpp=.o) $(UTIL_SOURCES_GEN_CXX:.cpp=.o)
UTIL_LIBRARIES = 

#############################################
# Sources for compiler library
#############################################
COMPILER_SOURCES_GEN_H =
COMPILER_SOURCES_GEN_C =
COMPILER_SOURCES_GEN_CXX =
COMPILER_SOURCES_C = $(wildcard src/compiler/*.c)
COMPILER_SOURCES_CXX = $(wildcard src/compiler/*.cpp)
COMPILER_INCLUDES = -Iinclude -Isrc -Isrc/mesa -Isrc/mapi -Isrc/gallium/auxiliary -Isrc/gallium/include -Isrc/util -Isrc/compiler
COMPILER_OBJECTS_C = $(COMPILER_SOURCES_C:.c=.o) $(COMPILER_SOURCES_GEN_C:.c=.o)
COMPILER_OBJECTS_CXX = $(COMPILER_SOURCES_CXX:.cpp=.o) $(COMPILER_SOURCES_GEN_CXX:.cpp=.o)
COMPILER_LIBRARIES = 

#############################################
# Sources for compiler-glsl library
#############################################
COMPILER_GLSL_SOURCES_GEN_H = src/compiler/glsl/ir_expression_operation.h src/compiler/glsl/ir_expression_operation_constant.h src/compiler/glsl/ir_expression_operation_strings.h
COMPILER_GLSL_SOURCES_GEN_C = src/compiler/glsl/glcpp/glcpp-lex.c src/compiler/glsl/glcpp/glcpp-parse.c src/compiler/glsl/imports.c src/compiler/glsl/extensions_table.c src/compiler/glsl/symbol_table.c src/compiler/glsl/dummy_errors.c
COMPILER_GLSL_SOURCES_GEN_CXX = src/compiler/glsl/glcpp/glsl_lexer.cpp src/compiler/glsl/glcpp/glsl_parser.cpp
COMPILER_GLSL_SOURCES_C = $(filter-out $(COMPILER_GLSL_SOURCES_GEN_C), $(wildcard src/compiler/glsl/*.c)) src/compiler/glsl/glcpp/pp.c
COMPILER_GLSL_SOURCES_CXX = $(filter-out src/compiler/glsl/main.cpp src/compiler/glsl/ir_builder_print_visitor.cpp src/compiler/glsl/standalone_scaffolding.cpp src/compiler/glsl/standalone.cpp src/compiler/glsl/shader_cache.cpp $(COMPILER_GLSL_SOURCES_GEN_CXX), $(wildcard src/compiler/glsl/*.cpp))
COMPILER_GLSL_INCLUDES = -Iinclude -Isrc -Isrc/mesa -Isrc/mesa/program -Isrc/mesa/main -Isrc/mapi -Isrc/gallium/auxiliary -Isrc/gallium/include -Isrc/util -Isrc/compiler -Isrc/compiler/glsl
COMPILER_GLSL_OBJECTS_C = $(COMPILER_GLSL_SOURCES_C:.c=.o) $(COMPILER_GLSL_SOURCES_GEN_C:.c=.o)
COMPILER_GLSL_OBJECTS_CXX = $(COMPILER_GLSL_SOURCES_CXX:.cpp=.o) $(COMPILER_GLSL_SOURCES_GEN_CXX:.cpp=.o)
COMPILER_GLSL_LIBRARIES = 

#############################################
# Sources for compiler-glsl application
#############################################
COMPILER_GLSL_APP_SOURCES_GEN_H =
COMPILER_GLSL_APP_SOURCES_GEN_C = 
COMPILER_GLSL_APP_SOURCES_GEN_CXX = 
COMPILER_GLSL_APP_SOURCES_C = 
COMPILER_GLSL_APP_SOURCES_CXX = src/compiler/glsl/main.cpp src/compiler/glsl/ir_builder_print_visitor.cpp src/compiler/glsl/standalone_scaffolding.cpp src/compiler/glsl/standalone.cpp
COMPILER_GLSL_APP_INCLUDES = -Iinclude -Isrc -Isrc/mesa -Isrc/mesa/program -Isrc/mesa/main -Isrc/mapi -Isrc/gallium/auxiliary -Isrc/gallium/include -Isrc/util -Isrc/compiler -Isrc/compiler/glsl
COMPILER_GLSL_APP_OBJECTS_C = $(COMPILER_GLSL_APP_SOURCES_C:.c=.o) $(COMPILER_GLSL_APP_SOURCES_GEN_C:.c=.o)
COMPILER_GLSL_APP_OBJECTS_CXX = $(COMPILER_GLSL_APP_SOURCES_CXX:.cpp=.o) $(COMPILER_GLSL_APP_SOURCES_GEN_CXX:.cpp=.o)
COMPILER_GLSL_APP_LIBRARIES = build/vali-x86/util.lib build/vali-x86/compiler.lib build/vali-x86/compiler-glsl.lib

#############################################
# Sources for glcpp application
#############################################
GLCPP_APP_SOURCES_GEN_H =
GLCPP_APP_SOURCES_GEN_C = 
GLCPP_APP_SOURCES_GEN_CXX = 
GLCPP_APP_SOURCES_C = src/compiler/glsl/glcpp/glcpp.c
GLCPP_APP_SOURCES_CXX = 
GLCPP_APP_INCLUDES = -Iinclude -Isrc -Isrc/mesa -Isrc/mesa/program -Isrc/mesa/main -Isrc/mapi -Isrc/gallium/auxiliary -Isrc/gallium/include -Isrc/util -Isrc/compiler -Isrc/compiler/glsl
GLCPP_APP_OBJECTS_C = $(GLCPP_APP_SOURCES_C:.c=.o) $(GLCPP_APP_SOURCES_GEN_C:.c=.o)
GLCPP_APP_OBJECTS_CXX = $(GLCPP_APP_SOURCES_CXX:.cpp=.o) $(GLCPP_APP_SOURCES_GEN_CXX:.cpp=.o)
GLCPP_APP_LIBRARIES = build/vali-x86/util.lib build/vali-x86/compiler.lib build/vali-x86/compiler-glsl.lib

#############################################
# Sources for compiler-nir library
#############################################
COMPILER_NIR_SOURCES_GEN_H = src/compiler/nir/nir_builder_opcodes.h src/compiler/nir/nir_opcodes.h
COMPILER_NIR_SOURCES_GEN_C = src/compiler/nir/nir_constant_expressions.c src/compiler/nir/nir_opcodes.c src/compiler/nir/nir_opt_algebraic.c
COMPILER_NIR_SOURCES_GEN_CXX =
COMPILER_NIR_SOURCES_C = $(filter-out $(COMPILER_NIR_SOURCES_GEN_C), $(wildcard src/compiler/nir/*.c))
COMPILER_NIR_SOURCES_CXX = $(filter-out $(COMPILER_NIR_SOURCES_GEN_CXX), $(wildcard src/compiler/nir/*.cpp))
COMPILER_NIR_INCLUDES = -Iinclude -Isrc -Isrc/mesa -Isrc/mesa/program -Isrc/mesa/main -Isrc/mapi -Isrc/gallium/auxiliary -Isrc/gallium/include -Isrc/util -Isrc/compiler -Isrc/compiler/nir
COMPILER_NIR_OBJECTS_C = $(COMPILER_NIR_SOURCES_C:.c=.o) $(COMPILER_NIR_SOURCES_GEN_C:.c=.o)
COMPILER_NIR_OBJECTS_CXX = $(COMPILER_NIR_SOURCES_CXX:.cpp=.o) $(COMPILER_NIR_SOURCES_GEN_CXX:.cpp=.o)
COMPILER_NIR_LIBRARIES = 

#############################################
# Sources for loader library
#############################################
LOADER_SOURCES_GEN_H = 
LOADER_SOURCES_GEN_C = 
LOADER_SOURCES_GEN_CXX =
LOADER_SOURCES_C = src/loader/loader.c src/loader/pci_id_driver_map.c
LOADER_SOURCES_CXX = 
LOADER_INCLUDES = -Iinclude -Isrc -Isrc/mesa -Isrc/mesa/program -Isrc/mesa/main -Isrc/mapi -Isrc/gallium/auxiliary -Isrc/gallium/include -Isrc/util -Isrc/compiler -Isrc/loader
LOADER_OBJECTS_C = $(LOADER_SOURCES_C:.c=.o) $(LOADER_SOURCES_GEN_C:.c=.o)
LOADER_OBJECTS_CXX = $(LOADER_SOURCES_CXX:.cpp=.o) $(LOADER_SOURCES_GEN_CXX:.cpp=.o)
LOADER_LIBRARIES = 

#############################################
# Sources for mapi-glapi library
#############################################
MAPI_GLAPI_SOURCES_GEN_H = src/mesa/main/dispatch.h src/mapi/glapi/glapitable.h src/mapi/glapi/glapitemp.h src/mapi/glapi/glprocs.h src/mesa/main/remap_helper.h
MAPI_GLAPI_SOURCES_GEN_C = src/mesa/main/enums.c src/mesa/main/api_exec.c
MAPI_GLAPI_SOURCES_GEN_S = src/mapi/glapi/glapi_x86.S  src/mapi/glapi/glapi_x86-64.S
MAPI_GLAPI_SOURCES_GEN_CXX = 
MAPI_GLAPI_SOURCES_C = $(wildcard src/mapi/glapi/*.c) src/mapi/u_current.c src/mapi/u_execmem.c
MAPI_GLAPI_SOURCES_CXX = 
MAPI_GLAPI_INCLUDES = -DMAPI_MODE_UTIL -DBUILD_GL32 -D_GLAPI_DLL_EXPORTS -DKHRONOS_DLL_EXPORTS -Iinclude -Isrc -Isrc/mesa -Isrc/mesa/program -Isrc/mesa/main -Isrc/mapi -Isrc/gallium/auxiliary -Isrc/gallium/include -Isrc/util -Isrc/compiler -Isrc/mapi -Isrc/mapi/glapi
MAPI_GLAPI_OBJECTS_S = src/mapi/glapi/glapi_x86.o
MAPI_GLAPI_OBJECTS_C = $(MAPI_GLAPI_SOURCES_C:.c=.o) $(MAPI_GLAPI_SOURCES_GEN_C:.c=.o)
MAPI_GLAPI_OBJECTS_CXX = $(MAPI_GLAPI_SOURCES_CXX:.cpp=.o) $(MAPI_GLAPI_SOURCES_GEN_CXX:.cpp=.o)
MAPI_GLAPI_LIBRARIES = 

#############################################
# Sources for mesa library
# USE_X86_ASM USE_MMX_ASM USE_3DNOW_ASM USE_SSE_ASM
# USE_X86_64_ASM
#############################################
MESA_SOURCES_GEN_H = src/mesa/main/matypes.h src/mesa/main/marshal_generated.h src/mesa/main/get_hash.h src/mesa/main/format_info.h
MESA_SOURCES_GEN_C = src/mesa/main/marshal_generated.c src/mesa/main/format_fallback.c src/mesa/main/format_pack.c src/mesa/main/format_unpack.c src/mesa/program/lex.yy.c src/mesa/program/program_parse.tab.c
MESA_SOURCES_GEN_S =
MESA_SOURCES_GEN_CXX = 
MESA_SOURCES_S = $(wildcard src/mesa/x86/*.S)
MESA_SOURCES_C = $(filter-out src/mesa/main/enums.c src/mesa/main/api_exec.c $(MESA_SOURCES_GEN_C), $(wildcard src/mesa/main/*.c)) \
				 $(filter-out src/mesa/program/lex.yy.c src/mesa/program/program_parse.tab.c, $(wildcard src/mesa/program/*.c)) \
				 $(wildcard src/mesa/state_tracker/*.c) \
				 $(wildcard src/mesa/math/*.c) \
				 $(wildcard src/mesa/vbo/*.c) \
				 $(wildcard src/mesa/tnl/*.c) \
				 $(wildcard src/mesa/swrast/*.c) \
				 $(wildcard src/mesa/swrast_setup/*.c) \
				 $(wildcard src/mesa/drivers/common/*.c) \
				 $(wildcard src/mesa/sparc/*.c) \
				 $(wildcard src/mesa/x86/*.c) \
				 $(wildcard src/mesa/x86/rtasm/*.c) \
				 $(wildcard src/mesa/x86-64/*.c)
MESA_SOURCES_CXX = $(wildcard src/mesa/main/*.cpp) \
				   $(wildcard src/mesa/program/*.cpp) \
				   $(wildcard src/mesa/state_tracker/*.cpp)
MESA_INCLUDES = -DUSE_X86_ASM -DUSE_MMX_ASM -DUSE_3DNOW_ASM -DUSE_SSE_ASM -DBUILD_GL32 -D_GLAPI_NO_EXPORTS -Iinclude -Isrc -Isrc/mesa -Isrc/mesa/program -Isrc/mesa/main -Isrc/mapi -Isrc/gallium/auxiliary -Isrc/gallium/include -Isrc/util -Isrc/compiler -Isrc/mapi -Isrc/mapi/glapi
MESA_OBJECTS_S = $(MESA_SOURCES_S:.S=.o)
MESA_OBJECTS_C = $(MESA_SOURCES_C:.c=.o) $(MESA_SOURCES_GEN_C:.c=.o)
MESA_OBJECTS_CXX = $(MESA_SOURCES_CXX:.cpp=.o) $(MESA_SOURCES_GEN_CXX:.cpp=.o)
MESA_LIBRARIES = 

#############################################
# Sources for os-mesa shared library
#############################################
OSMESA_DLL_SOURCES_GEN_H =
OSMESA_DLL_SOURCES_GEN_C = 
OSMESA_DLL_SOURCES_GEN_CXX = 
OSMESA_DLL_SOURCES_C = src/mesa/drivers/osmesa/osmesa.c
OSMESA_DLL_SOURCES_CXX = src/mesa/drivers/osmesa/entry.cpp
OSMESA_DLL_INCLUDES = -DBUILD_GL32 -D_GLAPI_NO_EXPORTS -Iinclude -Isrc -Isrc/mesa -Isrc/mesa/program -Isrc/mesa/main -Isrc/mapi -Isrc/gallium/auxiliary -Isrc/gallium/include -Isrc/util -Isrc/compiler -Isrc/compiler/glsl
OSMESA_DLL_OBJECTS_C = $(OSMESA_DLL_SOURCES_C:.c=.o) $(OSMESA_DLL_SOURCES_GEN_C:.c=.o)
OSMESA_DLL_OBJECTS_CXX = $(OSMESA_DLL_SOURCES_CXX:.cpp=.o) $(OSMESA_DLL_SOURCES_GEN_CXX:.cpp=.o)
OSMESA_DLL_LIBRARIES = build/vali-x86/mesa.lib build/vali-x86/util.lib build/vali-x86/compiler.lib build/vali-x86/compiler-glsl.lib build/vali-x86/glapi_lib.lib /def:src/mesa/drivers/osmesa/osmesa.def

#############################################
# Sources for glapi shared library
#############################################
GLAPI_DLL_SOURCES_GEN_H = src/mapi/shared-glapi-tmp.h
GLAPI_DLL_SOURCES_GEN_C = src/mapi/gl_entry.c src/mapi/gl_mapi_glapi.c src/mapi/gl_stub.c src/mapi/gl_table.c src/mapi/gl_u_current.c src/mapi/gl_u_execmem.c
GLAPI_DLL_SOURCES_GEN_CXX = src/mapi/gl_main.cpp
GLAPI_DLL_SOURCES_C = 
GLAPI_DLL_SOURCES_CXX = 
GLAPI_DLL_INCLUDES = -DMAPI_ABI_HEADER="\"shared-glapi-tmp.h\"" -D_GLAPI_DLL_EXPORTS -DMAPI_MODE_GLAPI -Iinclude -Isrc -Isrc/mesa -Isrc/mesa/program -Isrc/mesa/main -Isrc/mapi -Isrc/gallium/auxiliary -Isrc/gallium/include -Isrc/util -Isrc/compiler -Isrc/compiler/glsl
GLAPI_DLL_OBJECTS_C = $(GLAPI_DLL_SOURCES_C:.c=.o) $(GLAPI_DLL_SOURCES_GEN_C:.c=.o)
GLAPI_DLL_OBJECTS_CXX = $(GLAPI_DLL_SOURCES_CXX:.cpp=.o) $(GLAPI_DLL_SOURCES_GEN_CXX:.cpp=.o)
GLAPI_DLL_LIBRARIES = build/vali-x86/mesa.lib build/vali-x86/util.lib build/vali-x86/compiler.lib build/vali-x86/compiler-glsl.lib

#############################################
# Sources for GLESv1 shared library
#############################################
GLESV1_DLL_SOURCES_GEN_H = src/mapi/es1api-tmp.h
GLESV1_DLL_SOURCES_GEN_C = src/mapi/gl1_entry.c
GLESV1_DLL_SOURCES_GEN_CXX = src/mapi/gl1_main.cpp
GLESV1_DLL_SOURCES_C = 
GLESV1_DLL_SOURCES_CXX = 
GLESV1_DLL_INCLUDES = -DMAPI_ABI_HEADER="\"es1api-tmp.h\"" -DBUILD_GL32 -DMAPI_MODE_BRIDGE -Iinclude -Isrc -Isrc/mesa -Isrc/mesa/program -Isrc/mesa/main -Isrc/mapi -Isrc/gallium/auxiliary -Isrc/gallium/include -Isrc/util -Isrc/compiler -Isrc/compiler/glsl
GLESV1_DLL_OBJECTS_C = $(GLESV1_DLL_SOURCES_C:.c=.o) $(GLESV1_DLL_SOURCES_GEN_C:.c=.o)
GLESV1_DLL_OBJECTS_CXX = $(GLESV1_DLL_SOURCES_CXX:.cpp=.o) $(GLESV1_DLL_SOURCES_GEN_CXX:.cpp=.o)
GLESV1_DLL_LIBRARIES = build/vali-x86/mesa.lib build/vali-x86/util.lib build/vali-x86/compiler.lib build/vali-x86/compiler-glsl.lib build/vali-x86/glapi.lib

#############################################
# Sources for GLESv2 shared library
#############################################
GLESV2_DLL_SOURCES_GEN_H = src/mapi/es2api-tmp.h
GLESV2_DLL_SOURCES_GEN_C = src/mapi/gl2_entry.c
GLESV2_DLL_SOURCES_GEN_CXX = src/mapi/gl2_main.cpp
GLESV2_DLL_SOURCES_C = 
GLESV2_DLL_SOURCES_CXX = 
GLESV2_DLL_INCLUDES = -DMAPI_ABI_HEADER="\"es2api-tmp.h\"" -DBUILD_GL32 -DMAPI_MODE_BRIDGE -Iinclude -Isrc -Isrc/mesa -Isrc/mesa/program -Isrc/mesa/main -Isrc/mapi -Isrc/gallium/auxiliary -Isrc/gallium/include -Isrc/util -Isrc/compiler -Isrc/compiler/glsl
GLESV2_DLL_OBJECTS_C = $(GLESV2_DLL_SOURCES_C:.c=.o) $(GLESV2_DLL_SOURCES_GEN_C:.c=.o)
GLESV2_DLL_OBJECTS_CXX = $(GLESV2_DLL_SOURCES_CXX:.cpp=.o) $(GLESV2_DLL_SOURCES_GEN_CXX:.cpp=.o)
GLESV2_DLL_LIBRARIES = build/vali-x86/mesa.lib build/vali-x86/util.lib build/vali-x86/compiler.lib build/vali-x86/compiler-glsl.lib build/vali-x86/glapi.lib build/vali-x86/osmesa.lib

#############################################
# Sources for gallium-aux library
#############################################
GAAUX_SOURCES_GEN_H =
GAAUX_SOURCES_GEN_C = src/gallium/auxiliary/indices/u_indices_gen.c src/gallium/auxiliary/indices/u_unfilled_gen.c src/gallium/auxiliary/util/u_format_table.c
GAAUX_SOURCES_GEN_S =
GAAUX_SOURCES_GEN_CXX = 
GAAUX_SOURCES_C = $(wildcard src/gallium/auxiliary/cso_cache/*.c) \
				  $(wildcard src/gallium/auxiliary/draw/*.c) \
				  $(wildcard src/gallium/auxiliary/hud/*.c) \
				  src/gallium/auxiliary/indices/u_primconvert.c \
				  $(wildcard src/gallium/auxiliary/os/*.c) \
				  $(wildcard src/gallium/auxiliary/pipebuffer/*.c) \
				  $(wildcard src/gallium/auxiliary/postprocess/*.c) \
				  $(wildcard src/gallium/auxiliary/rbug/*.c) \
				  $(wildcard src/gallium/auxiliary/rtasm/*.c) \
				  $(wildcard src/gallium/auxiliary/tgsi/*.c) \
				  $(wildcard src/gallium/auxiliary/translate/*.c) \
				  $(filter-out $(GAAUX_SOURCES_GEN_C), $(wildcard src/gallium/auxiliary/util/*.c)) \
				  src/gallium/auxiliary/vl/vl_stubs.c \
				  $(wildcard src/gallium/auxiliary/gallivm/*.c)
GAAUX_SOURCES_CXX = src/gallium/auxiliary/gallivm/lp_bld_debug.cpp src/gallium/auxiliary/gallivm/lp_bld_misc.cpp
GAAUX_INCLUDES = -Iinclude -Isrc -Isrc/gallium/include -Isrc/gallium/auxiliary
GAAUX_OBJECTS_S =
GAAUX_OBJECTS_C = $(GAAUX_SOURCES_C:.c=.o) $(GAAUX_SOURCES_GEN_C:.c=.o)
GAAUX_OBJECTS_CXX = $(GAAUX_SOURCES_CXX:.cpp=.o) $(GAAUX_SOURCES_GEN_CXX:.cpp=.o)
GAAUX_LIBRARIES = 

#############################################
# Sources for gallium-pipe library
#############################################
GAPIPE_SOURCES_GEN_H =
GAPIPE_SOURCES_GEN_C =
GAPIPE_SOURCES_GEN_S =
GAPIPE_SOURCES_GEN_CXX = 
GAPIPE_SOURCES_C = src/gallium/auxiliary/pipe-loader/pipe_loader.c src/gallium/auxiliary/pipe-loader/pipe_loader_sw.c
GAPIPE_SOURCES_CXX = 
GAPIPE_INCLUDES = -DGALLIUM_STATIC_TARGETS=1 -DDROP_PIPE_LOADER_MISC=1 -DHAVE_PIPE_LOADER_DRI=1 -Iinclude -Isrc -Isrc/gallium/include -Isrc/gallium/auxiliary -Isrc/gallium/winsys
GAPIPE_OBJECTS_S =
GAPIPE_OBJECTS_C = $(GAPIPE_SOURCES_C:.c=.o) $(GAPIPE_SOURCES_GEN_C:.c=.o)
GAPIPE_OBJECTS_CXX = $(GAPIPE_SOURCES_CXX:.cpp=.o) $(GAPIPE_SOURCES_GEN_CXX:.cpp=.o)
GAPIPE_LIBRARIES = 

#############################################
# Sources for gallium driver (llvmpipe) library
#############################################
GALLVMPIPE_SOURCES_GEN_H =
GALLVMPIPE_SOURCES_GEN_C =
GALLVMPIPE_SOURCES_GEN_S =
GALLVMPIPE_SOURCES_GEN_CXX = 
GALLVMPIPE_SOURCES_C = $(filter-out $(wildcard *lp_test*.c), $(wildcard src/gallium/drivers/llvmpipe/*.c))
GALLVMPIPE_SOURCES_CXX = 
GALLVMPIPE_INCLUDES = -Iinclude -Isrc -Isrc/gallium/include -Isrc/gallium/auxiliary -Isrc/gallium/winsys
GALLVMPIPE_OBJECTS_S =
GALLVMPIPE_OBJECTS_C = $(GALLVMPIPE_SOURCES_C:.c=.o) $(GALLVMPIPE_SOURCES_GEN_C:.c=.o)
GALLVMPIPE_OBJECTS_CXX = $(GALLVMPIPE_SOURCES_CXX:.cpp=.o) $(GALLVMPIPE_SOURCES_GEN_CXX:.cpp=.o)
GALLVMPIPE_LIBRARIES = 

#############################################
# Sources for gallium driver (rbug) library
#############################################
GARBUG_SOURCES_GEN_H =
GARBUG_SOURCES_GEN_C =
GARBUG_SOURCES_GEN_S =
GARBUG_SOURCES_GEN_CXX = 
GARBUG_SOURCES_C = src/gallium/drivers/rbug/rbug_context.c src/gallium/drivers/rbug/rbug_core.c src/gallium/drivers/rbug/rbug_objects.c src/gallium/drivers/rbug/rbug_screen.c
GARBUG_SOURCES_CXX = 
GARBUG_INCLUDES = -Iinclude -Isrc -Isrc/gallium/include -Isrc/gallium/auxiliary -Isrc/gallium/winsys
GARBUG_OBJECTS_S =
GARBUG_OBJECTS_C = $(GARBUG_SOURCES_C:.c=.o) $(GARBUG_SOURCES_GEN_C:.c=.o)
GARBUG_OBJECTS_CXX = $(GARBUG_SOURCES_CXX:.cpp=.o) $(GARBUG_SOURCES_GEN_CXX:.cpp=.o)
GARBUG_LIBRARIES = 

#############################################
# Sources for gallium driver (softpipe) library
#############################################
GASOFTPIPE_SOURCES_GEN_H =
GASOFTPIPE_SOURCES_GEN_C =
GASOFTPIPE_SOURCES_GEN_S =
GASOFTPIPE_SOURCES_GEN_CXX = 
GASOFTPIPE_SOURCES_C = $(wildcard src/gallium/drivers/softpipe/*.c)
GASOFTPIPE_SOURCES_CXX = 
GASOFTPIPE_INCLUDES = -Iinclude -Isrc -Isrc/gallium/include -Isrc/gallium/auxiliary -Isrc/gallium/winsys
GASOFTPIPE_OBJECTS_S =
GASOFTPIPE_OBJECTS_C = $(GASOFTPIPE_SOURCES_C:.c=.o) $(GASOFTPIPE_SOURCES_GEN_C:.c=.o)
GASOFTPIPE_OBJECTS_CXX = $(GASOFTPIPE_SOURCES_CXX:.cpp=.o) $(GASOFTPIPE_SOURCES_GEN_CXX:.cpp=.o)
GASOFTPIPE_LIBRARIES = 

#############################################
# Sources for gallium driver (svga) library
#############################################
GASVGA_SOURCES_GEN_H =
GASVGA_SOURCES_GEN_C =
GASVGA_SOURCES_GEN_S =
GASVGA_SOURCES_GEN_CXX = 
GASVGA_SOURCES_C = $(wildcard src/gallium/drivers/svga/*.c)
GASVGA_SOURCES_CXX = 
GASVGA_INCLUDES = -DHAVE_STDINT_H -Iinclude -Isrc -Isrc/gallium/include -Isrc/gallium/auxiliary -Isrc/gallium/drivers/svga/include
GASVGA_OBJECTS_S =
GASVGA_OBJECTS_C = $(GASVGA_SOURCES_C:.c=.o) $(GASVGA_SOURCES_GEN_C:.c=.o)
GASVGA_OBJECTS_CXX = $(GASVGA_SOURCES_CXX:.cpp=.o) $(GASVGA_SOURCES_GEN_CXX:.cpp=.o)
GASVGA_LIBRARIES = 

#############################################
# Sources for gallium driver (trace) library
#############################################
GATRACE_SOURCES_GEN_H =
GATRACE_SOURCES_GEN_C =
GATRACE_SOURCES_GEN_S =
GATRACE_SOURCES_GEN_CXX = 
GATRACE_SOURCES_C = $(wildcard src/gallium/drivers/trace/*.c)
GATRACE_SOURCES_CXX = 
GATRACE_INCLUDES = -Iinclude -Isrc -Isrc/gallium/include -Isrc/gallium/auxiliary
GATRACE_OBJECTS_S =
GATRACE_OBJECTS_C = $(GATRACE_SOURCES_C:.c=.o) $(GATRACE_SOURCES_GEN_C:.c=.o)
GATRACE_OBJECTS_CXX = $(GATRACE_SOURCES_CXX:.cpp=.o) $(GATRACE_SOURCES_GEN_CXX:.cpp=.o)
GATRACE_LIBRARIES = 

#############################################
# Sources for gallium driver (swr) libraries
#############################################
GASWR_SOURCES_GEN_H = src/gallium/drivers/swr/rasterizer/codegen/gen_knobs.h \
					  src/gallium/drivers/swr/rasterizer/jitter/gen_state_llvm.h \
					  src/gallium/drivers/swr/rasterizer/jitter/gen_builder.hpp \
					  src/gallium/drivers/swr/rasterizer/jitter/gen_builder_x86.hpp \
					  src/gallium/drivers/swr/gen_swr_context_llvm.h \
					  src/gallium/drivers/swr/rasterizer/archrast/gen_ar_event.hpp \
					  src/gallium/drivers/swr/rasterizer/archrast/gen_ar_eventhandler.hpp \
					  src/gallium/drivers/swr/rasterizer/archrast/gen_ar_eventhandlerfile.hpp \
					  src/gallium/drivers/swr/rasterizer/core/backends/gen_BackendPixelRate.hpp \
					  src/gallium/drivers/swr/rasterizer/core/backends/gen_rasterizer.hpp
GASWR_SOURCES_GEN_C =
GASWR_SOURCES_GEN_S =
GASWR_SOURCES_GEN_CXX = src/gallium/drivers/swr/rasterizer/codegen/gen_knobs.cpp \
						src/gallium/drivers/swr/rasterizer/archrast/gen_ar_event.cpp
GASWR_INCLUDES = -Iinclude -Isrc -Isrc/gallium/include -Isrc/gallium/auxiliary \
				 -Isrc/gallium/drivers/swr -Isrc/gallium/drivers/swr/rasterizer -Isrc/gallium/drivers/swr/rasterizer/codegen \
				 -Isrc/gallium/drivers/swr/rasterizer/jitter -Isrc/gallium/drivers/swr/rasterizer/core

# Files for gallium-swr library
GASWR_LIB_INCLUDES = -mavx -mavx2 -mfma -mbmi2 -mf16c -DHAVE_SWR_AVX -DHAVE_SWR_AVX2 $(GASWR_INCLUDES)
GASWR_LIB_SOURCES_C = 
GASWR_LIB_SOURCES_CXX = $(wildcard src/gallium/drivers/swr/*.cpp) \
						$(wildcard src/gallium/drivers/swr/rasterizer/common/*.cpp) \
						$(wildcard src/gallium/drivers/swr/rasterizer/jitter/*.cpp)
GASWR_LIB_OBJECTS_S =
GASWR_LIB_OBJECTS_C = $(GASWR_LIB_SOURCES_C:.c=.o) $(GASWR_SOURCES_GEN_C:.c=.o)
GASWR_LIB_OBJECTS_CXX = $(GASWR_LIB_SOURCES_CXX:.cpp=.o) $(GASWR_SOURCES_GEN_CXX:.cpp=.o)

# Shared files between gallium-swr-avx and gallium-swr-avx2
GASWR_ARCH_SOURCES_C = 
GASWR_ARCH_SOURCES_CXX = $(wildcard src/gallium/drivers/swr/rasterizer/common/*.cpp) \
						 $(wildcard src/gallium/drivers/swr/rasterizer/core/*.cpp) \
						 $(wildcard src/gallium/drivers/swr/rasterizer/core/backends/*.cpp) \
						 $(wildcard src/gallium/drivers/swr/rasterizer/memory/*.cpp) \
						 src/gallium/drivers/swr/rasterizer/archrast/archrast.cpp \
						 src/gallium/drivers/swr/rasterizer/main.cpp

# gallium-swr-avx objects
GASWR_AVX_INCLUDES = -DKNOB_ARCH=KNOB_ARCH_AVX -mavx $(GASWR_INCLUDES)
GASWR_AVX_OBJECTS_S =
GASWR_AVX_OBJECTS_C = $(GASWR_ARCH_SOURCES_C:.c=.avx_o) $(GASWR_SOURCES_GEN_C:.c=.avx_o)
GASWR_AVX_OBJECTS_CXX = $(GASWR_ARCH_SOURCES_CXX:.cpp=.avx_o) $(GASWR_SOURCES_GEN_CXX:.cpp=.avx_o)
GASWR_AVX_LIBRARIES = build/vali-x86/gallium-aux.lib

# gallium-swr-avx2 objects
GASWR_AVX2_INCLUDES = -DKNOB_ARCH=KNOB_ARCH_AVX2 -mavx2 -mfma -mbmi2 -mf16c $(GASWR_INCLUDES)
GASWR_AVX2_OBJECTS_S =
GASWR_AVX2_OBJECTS_C = $(GASWR_ARCH_SOURCES_C:.c=.avx2_o) $(GASWR_SOURCES_GEN_C:.c=.avx2_o)
GASWR_AVX2_OBJECTS_CXX = $(GASWR_ARCH_SOURCES_CXX:.cpp=.avx2_o) $(GASWR_SOURCES_GEN_CXX:.cpp=.avx2_o)
GASWR_AVX2_LIBRARIES = build/vali-x86/gallium-aux.lib

#############################################
# Sources for gallium winsys (sw/null) library
#############################################
GAWINSYS_NULL_SOURCES_GEN_H =
GAWINSYS_NULL_SOURCES_GEN_C =
GAWINSYS_NULL_SOURCES_GEN_S =
GAWINSYS_NULL_SOURCES_GEN_CXX = 
GAWINSYS_NULL_SOURCES_C = src/gallium/winsys/sw/null/null_sw_winsys.c
GAWINSYS_NULL_SOURCES_CXX = 
GAWINSYS_NULL_INCLUDES = -Iinclude -Isrc -Isrc/gallium/include -Isrc/gallium/auxiliary -Isrc/gallium/winsys/sw/null/
GAWINSYS_NULL_OBJECTS_S =
GAWINSYS_NULL_OBJECTS_C = $(GAWINSYS_NULL_SOURCES_C:.c=.o) $(GAWINSYS_NULL_SOURCES_GEN_C:.c=.o)
GAWINSYS_NULL_OBJECTS_CXX = $(GAWINSYS_NULL_SOURCES_CXX:.cpp=.o) $(GAWINSYS_NULL_SOURCES_GEN_CXX:.cpp=.o)
GAWINSYS_NULL_LIBRARIES = 

#############################################
# Sources for gallium winsys (sw/wrapper) library
#############################################
GAWINSYS_WRAPPER_SOURCES_GEN_H =
GAWINSYS_WRAPPER_SOURCES_GEN_C =
GAWINSYS_WRAPPER_SOURCES_GEN_S =
GAWINSYS_WRAPPER_SOURCES_GEN_CXX = 
GAWINSYS_WRAPPER_SOURCES_C = src/gallium/winsys/sw/wrapper/wrapper_sw_winsys.c
GAWINSYS_WRAPPER_SOURCES_CXX = 
GAWINSYS_WRAPPER_INCLUDES = -Iinclude -Isrc -Isrc/gallium/include -Isrc/gallium/auxiliary -Isrc/gallium/winsys/sw/wrapper/
GAWINSYS_WRAPPER_OBJECTS_S =
GAWINSYS_WRAPPER_OBJECTS_C = $(GAWINSYS_WRAPPER_SOURCES_C:.c=.o) $(GAWINSYS_WRAPPER_SOURCES_GEN_C:.c=.o)
GAWINSYS_WRAPPER_OBJECTS_CXX = $(GAWINSYS_WRAPPER_SOURCES_CXX:.cpp=.o) $(GAWINSYS_WRAPPER_SOURCES_GEN_CXX:.cpp=.o)
GAWINSYS_WRAPPER_LIBRARIES = 

#############################################
# Sources for gallium target (graw-null) library
#############################################
GRAW_NULL_SOURCES_GEN_H =
GRAW_NULL_SOURCES_GEN_C =
GRAW_NULL_SOURCES_GEN_S =
GRAW_NULL_SOURCES_GEN_CXX = 
GRAW_NULL_SOURCES_C = $(wildcard src/gallium/targets/graw-null/*.c)
GRAW_NULL_SOURCES_CXX = src/gallium/targets/graw-null/main.cpp
GRAW_NULL_INCLUDES = -Iinclude -Isrc -Isrc/gallium/include -Isrc/gallium/auxiliary
GRAW_NULL_OBJECTS_S =
GRAW_NULL_OBJECTS_C = $(GRAW_NULL_SOURCES_C:.c=.o) $(GRAW_NULL_SOURCES_GEN_C:.c=.o)
GRAW_NULL_OBJECTS_CXX = $(GRAW_NULL_SOURCES_CXX:.cpp=.o) $(GRAW_NULL_SOURCES_GEN_CXX:.cpp=.o)
GRAW_NULL_LIBRARIES = build/vali-x86/util.lib build/vali-x86/gallium-aux.lib

#############################################
# Sources for gallium state_tracker (osmesa) library
#############################################
GAST_OSMESA_SOURCES_GEN_H =
GAST_OSMESA_SOURCES_GEN_C =
GAST_OSMESA_SOURCES_GEN_S =
GAST_OSMESA_SOURCES_GEN_CXX = 
GAST_OSMESA_SOURCES_C = src/gallium/state_trackers/osmesa/osmesa.c
GAST_OSMESA_SOURCES_CXX =
GAST_OSMESA_INCLUDES = -DBUILD_GL32 -Iinclude -Isrc -Isrc/mesa -Isrc/mapi -Isrc/gallium/include -Isrc/gallium/auxiliary
GAST_OSMESA_OBJECTS_S =
GAST_OSMESA_OBJECTS_C = $(GAST_OSMESA_SOURCES_C:.c=.o) $(GAST_OSMESA_SOURCES_GEN_C:.c=.o)
GAST_OSMESA_OBJECTS_CXX = $(GAST_OSMESA_SOURCES_CXX:.cpp=.o) $(GAST_OSMESA_SOURCES_GEN_CXX:.cpp=.o)
GAST_OSMESA_LIBRARIES =

#############################################
# Sources for gallium target (osmesa) library
#############################################
LLVM_LIBRARIES = $(wildcard $(LIBRARIES)/libLLVM*)
GA_OSMESA_SOURCES_GEN_H =
GA_OSMESA_SOURCES_GEN_C =
GA_OSMESA_SOURCES_GEN_S =
GA_OSMESA_SOURCES_GEN_CXX = 
GA_OSMESA_SOURCES_C = src/gallium/targets/osmesa/target.c
GA_OSMESA_SOURCES_CXX = src/gallium/targets/osmesa/main.cpp
GA_OSMESA_INCLUDES = -DGALLIUM_LLVMPIPE -DGALLIUM_SWR -Iinclude -Isrc -Isrc/gallium/include -Isrc/gallium/auxiliary -Isrc/gallium/drivers -Isrc/gallium/winsys
GA_OSMESA_OBJECTS_S =
GA_OSMESA_OBJECTS_C = $(GA_OSMESA_SOURCES_C:.c=.o) $(GA_OSMESA_SOURCES_GEN_C:.c=.o)
GA_OSMESA_OBJECTS_CXX = $(GA_OSMESA_SOURCES_CXX:.cpp=.o) $(GA_OSMESA_SOURCES_GEN_CXX:.cpp=.o)
GA_OSMESA_LIBRARIES = $(LLVM_LIBRARIES) build/vali-x86/util.lib build/vali-x86/gallium-aux.lib \
					  build/vali-x86/gallium-st-osmesa.lib build/vali-x86/gallium-winsys-null.lib \
					  build/vali-x86/gallium-softpipe.lib build/vali-x86/glapi_lib.lib \
					  build/vali-x86/compiler.lib build/vali-x86/mesa.lib \
					  build/vali-x86/gallium-trace.lib build/vali-x86/compiler-glsl.lib \
					  build/vali-x86/compiler-nir.lib build/vali-x86/gallium-llvmpipe.lib \
					  build/vali-x86/gallium-swr.lib /def:src/gallium/targets/osmesa/osmesa.def

.PHONY: all
all: build/vali-x86 build/vali-x86/util.lib build/vali-x86/compiler.lib \
	 build/vali-x86/compiler-glsl.lib build/vali-x86/compiler-glsl.app \
	 build/vali-x86/glcpp.app build/vali-x86/compiler-nir.lib build/vali-x86/loader.lib \
	 build/vali-x86/glapi_lib.lib build/vali-x86/mesa.lib build/vali-x86/osmesa.dll \
	 build/vali-x86/glapi.dll build/vali-x86/GLESv1.dll build/vali-x86/GLESv2.dll \
	 build/vali-x86/gallium-aux.lib build/vali-x86/gallium-pipe.lib \
	 build/vali-x86/gallium-llvmpipe.lib build/vali-x86/gallium-rbug.lib \
	 build/vali-x86/gallium-softpipe.lib build/vali-x86/gallium-svga.lib \
	 build/vali-x86/gallium-trace.lib build/vali-x86/gallium-swr.lib \
	 build/vali-x86/gallium-swr-avx.dll build/vali-x86/gallium-swr-avx2.dll \
	 build/vali-x86/gallium-winsys-null.lib build/vali-x86/gallium-winsys-wrapper.lib \
	 build/vali-x86/gallium-graw-null.dll build/vali-x86/gallium-st-osmesa.lib \
	 build/vali-x86/gallium-osmesa.dll

define \n


endef

.PHONY: install
install: all
	$(foreach app, $(INSTALL_APP), cp -f $(app) ../bin/$(notdir $(app))${\n})
	$(foreach dll, $(INSTALL_DLL), cp -f $(dll) ../bin/$(notdir $(dll))${\n})
	$(foreach lib, $(INSTALL_LIB), cp -f $(lib) ../lib/$(notdir $(lib))${\n})
	@mkdir -p ../include/GL
	cp -rf include/CL/ ../include/
	cp -rf include/EGL/ ../include/
	cp -rf include/GL/*.h ../include/GL
	cp -rf include/GLES/ ../include/
	cp -rf include/GLES2/ ../include/
	cp -rf include/GLES3/ ../include/
	cp -rf include/KHR/ ../include/
	cp -rf include/vulkan/ ../include/

build/vali-x86:
	@mkdir -p $@

#############################################
# Utility Library
#############################################
build/vali-x86/util.lib: $(UTIL_SOURCES_GEN_H) $(UTIL_SOURCES_GEN_C) $(UTIL_SOURCES_GEN_CXX) $(UTIL_OBJECTS_C) $(UTIL_OBJECTS_CXX)
	@printf "%b" "\033[0;36mCreating static library " $@ "\033[m\n"
	@$(LD) /lib $(UTIL_OBJECTS_C) $(UTIL_OBJECTS_CXX) $(UTIL_LIBRARIES) /out:$@

# python_cmd + ' $SCRIPT > $TARGET'
src/util/format_srgb.c: src/util/format_srgb.py
	python $< > $@

# python_cmd + ' $SCRIPT $SOURCE ' + LOCALEDIR + ' > $TARGET'
src/util/xmlpool/options.h: src/util/xmlpool/gen_xmlpool.py src/util/xmlpool/t_options.h
	python $^ src/util/xmlpool > $@

$(UTIL_OBJECTS_C): %.o : %.c
	@printf "%b" "\033[0;32mCompiling C source object " $< "\033[m\n"
	@$(CC) -c $(GUCFLAGS) $(UTIL_INCLUDES) -o $@ $<

$(UTIL_OBJECTS_CXX): %.o : %.cpp
	@printf "%b" "\033[0;32mCompiling C++ source object " $< "\033[m\n"
	@$(CXX) -c $(GUCXXFLAGS) $(UTIL_INCLUDES) -o $@ $<

#############################################
# Compiler Library
#############################################
build/vali-x86/compiler.lib: $(COMPILER_SOURCES_GEN_H) $(COMPILER_GLSL_SOURCES_GEN_H) $(COMPILER_SOURCES_GEN_C) $(COMPILER_SOURCES_GEN_CXX) $(COMPILER_OBJECTS_C) $(COMPILER_OBJECTS_CXX)
	@printf "%b" "\033[0;36mCreating static library " $@ "\033[m\n"
	@$(LD) /lib $(COMPILER_OBJECTS_C) $(COMPILER_OBJECTS_CXX) $(COMPILER_LIBRARIES) /out:$@

$(COMPILER_OBJECTS_C): %.o : %.c
	@printf "%b" "\033[0;32mCompiling C source object " $< "\033[m\n"
	@$(CC) -c $(GUCFLAGS) $(COMPILER_INCLUDES) -o $@ $<

$(COMPILER_OBJECTS_CXX): %.o : %.cpp
	@printf "%b" "\033[0;32mCompiling C++ source object " $< "\033[m\n"
	@$(CXX) -c $(GUCXXFLAGS) $(COMPILER_INCLUDES) -o $@ $<

#############################################
# GLSL-Compiler Library
#############################################
build/vali-x86/compiler-glsl.lib: $(COMPILER_NIR_SOURCES_GEN_H) $(COMPILER_GLSL_SOURCES_GEN_H) $(COMPILER_GLSL_SOURCES_GEN_C) $(COMPILER_GLSL_SOURCES_GEN_CXX) $(COMPILER_GLSL_OBJECTS_C) $(COMPILER_GLSL_OBJECTS_CXX)
	@printf "%b" "\033[0;36mCreating static library " $@ "\033[m\n"
	@$(LD) /lib $(COMPILER_GLSL_OBJECTS_C) $(COMPILER_GLSL_OBJECTS_CXX) $(COMPILER_GLSL_LIBRARIES) /out:$@

src/compiler/glsl/glcpp/glcpp-lex.c: src/compiler/glsl/glcpp/glcpp-lex.l
	lex -o $@ $<
	
src/compiler/glsl/glcpp/glsl_lexer.cpp: src/compiler/glsl/glsl_lexer.ll
	lex -o $@ $<

src/compiler/glsl/glcpp/glcpp-parse.c: src/compiler/glsl/glcpp/glcpp-parse.y
	yacc -d -p glcpp_parser_ -o $@ $<
	
src/compiler/glsl/glcpp/glsl_parser.cpp: src/compiler/glsl/glsl_parser.yy
	yacc --defines=src/compiler/glsl/glcpp/glsl_parser.h -p _mesa_glsl_ -o $@ $<

src/compiler/glsl/imports.c: src/mesa/main/imports.c
	cp $< $@
src/compiler/glsl/extensions_table.c: src/mesa/main/extensions_table.c
	cp $< $@
src/compiler/glsl/symbol_table.c: src/mesa/program/symbol_table.c
	cp $< $@
src/compiler/glsl/dummy_errors.c: src/mesa/program/dummy_errors.c
	cp $< $@

# python_cmd + ' $SCRIPT enum > $TARGET'
src/compiler/glsl/ir_expression_operation.h: src/compiler/glsl/ir_expression_operation.py
	python $< enum > $@

# python_cmd + ' $SCRIPT constant > $TARGET'
src/compiler/glsl/ir_expression_operation_constant.h: src/compiler/glsl/ir_expression_operation.py
	python $< constant > $@

# python_cmd + ' $SCRIPT strings > $TARGET'
src/compiler/glsl/ir_expression_operation_strings.h: src/compiler/glsl/ir_expression_operation.py
	python $< strings > $@

$(COMPILER_GLSL_OBJECTS_C): %.o : %.c
	@printf "%b" "\033[0;32mCompiling C source object " $< "\033[m\n"
	@$(CC) -c $(GUCFLAGS) $(COMPILER_GLSL_INCLUDES) -o $@ $<

$(COMPILER_GLSL_OBJECTS_CXX): %.o : %.cpp
	@printf "%b" "\033[0;32mCompiling C++ source object " $< "\033[m\n"
	@$(CXX) -c $(GUCXXFLAGS) $(COMPILER_GLSL_INCLUDES) -o $@ $<

#############################################
# NIR-Compiler Library
#############################################
build/vali-x86/compiler-nir.lib: $(COMPILER_NIR_SOURCES_GEN_H) $(COMPILER_NIR_SOURCES_GEN_C) $(COMPILER_NIR_SOURCES_GEN_CXX) $(COMPILER_NIR_OBJECTS_C) $(COMPILER_NIR_OBJECTS_CXX)
	@printf "%b" "\033[0;36mCreating static library " $@ "\033[m\n"
	@$(LD) /lib $(COMPILER_NIR_OBJECTS_C) $(COMPILER_NIR_OBJECTS_CXX) $(COMPILER_NIR_LIBRARIES) /out:$@

#python_cmd + ' $SCRIPT > $TARGET'
src/compiler/nir/nir_builder_opcodes.h: src/compiler/nir/nir_builder_opcodes_h.py
	python $< > $@

#python_cmd + ' $SCRIPT > $TARGET'
src/compiler/nir/nir_opcodes.h: src/compiler/nir/nir_opcodes_h.py 
	python $< > $@

#python_cmd + ' $SCRIPT > $TARGET'
src/compiler/nir/nir_constant_expressions.c: src/compiler/nir/nir_constant_expressions.py
	python $< > $@

#python_cmd + ' $SCRIPT > $TARGET'
src/compiler/nir/nir_opcodes.c: src/compiler/nir/nir_opcodes_c.py
	python $< > $@

#python_cmd + ' $SCRIPT > $TARGET'
src/compiler/nir/nir_opt_algebraic.c: src/compiler/nir/nir_opt_algebraic.py
	python $< > $@

$(COMPILER_NIR_OBJECTS_C): %.o : %.c
	@printf "%b" "\033[0;32mCompiling C source object " $< "\033[m\n"
	@$(CC) -c $(GUCFLAGS) $(COMPILER_NIR_INCLUDES) -o $@ $<

$(COMPILER_NIR_OBJECTS_CXX): %.o : %.cpp
	@printf "%b" "\033[0;32mCompiling C++ source object " $< "\033[m\n"
	@$(CXX) -c $(GUCXXFLAGS) $(COMPILER_NIR_INCLUDES) -o $@ $<

#############################################
# Loader Library
#############################################
build/vali-x86/loader.lib: $(LOADER_SOURCES_GEN_H) $(LOADER_SOURCES_GEN_C) $(LOADER_SOURCES_GEN_CXX) $(LOADER_OBJECTS_C) $(LOADER_OBJECTS_CXX)
	@printf "%b" "\033[0;36mCreating static library " $@ "\033[m\n"
	@$(LD) /lib $(LOADER_OBJECTS_C) $(LOADER_OBJECTS_CXX) $(LOADER_LIBRARIES) /out:$@

$(LOADER_OBJECTS_C): %.o : %.c
	@printf "%b" "\033[0;32mCompiling C source object " $< "\033[m\n"
	@$(CC) -c $(GUCFLAGS) $(LOADER_INCLUDES) -o $@ $<

$(LOADER_OBJECTS_CXX): %.o : %.cpp
	@printf "%b" "\033[0;32mCompiling C++ source object " $< "\033[m\n"
	@$(CXX) -c $(GUCXXFLAGS) $(LOADER_INCLUDES) -o $@ $<

#############################################
# MAPI Glapi Library
#############################################
build/vali-x86/glapi_lib.lib: $(MAPI_GLAPI_SOURCES_GEN_H) $(MAPI_GLAPI_SOURCES_GEN_S) $(MAPI_GLAPI_SOURCES_GEN_C) $(MAPI_GLAPI_SOURCES_GEN_CXX) $(MAPI_GLAPI_OBJECTS_S) $(MAPI_GLAPI_OBJECTS_C) $(MAPI_GLAPI_OBJECTS_CXX)
	@printf "%b" "\033[0;36mCreating static library " $@ "\033[m\n"
	@$(LD) /lib $(MAPI_GLAPI_OBJECTS_S) $(MAPI_GLAPI_OBJECTS_C) $(MAPI_GLAPI_OBJECTS_CXX) $(MAPI_GLAPI_LIBRARIES) /out:$@

# Xml dependancies
MAPI_GEN_XML = src/mapi/glapi/gen/gl_and_es_API.xml $(filter-out src/mapi/glapi/gen/gl_and_es_API.xml, $(wildcard src/mapi/glapi/gen/*xml))

# python_cmd + ' $SCRIPT -m remap_table -f $SOURCE > $TARGET',
src/mesa/main/dispatch.h: src/mapi/glapi/gen/gl_table.py
	python $< -m remap_table -f src/mapi/glapi/gen/gl_and_es_API.xml > $@

# python_cmd + ' $SCRIPT -f $SOURCE > $TARGET'
src/mapi/glapi/glapitable.h: src/mapi/glapi/gen/gl_table.py
	python $< -m table -f src/mapi/glapi/gen/gl_and_es_API.xml > $@

# python_cmd + ' $SCRIPT -f $SOURCE > $TARGET'
src/mapi/glapi/glapitemp.h: src/mapi/glapi/gen/gl_apitemp.py
	python $< -f src/mapi/glapi/gen/gl_and_es_API.xml > $@

# python_cmd + ' $SCRIPT -c -f $SOURCE > $TARGET'
src/mapi/glapi/glprocs.h: src/mapi/glapi/gen/gl_procs.py
	python $< -c -f src/mapi/glapi/gen/gl_and_es_API.xml > $@

# python_cmd + ' $SCRIPT -f $SOURCE > $TARGET'
src/mesa/main/remap_helper.h: src/mapi/glapi/gen/remap_helper.py
	python $< -f src/mapi/glapi/gen/gl_and_es_API.xml > $@

# python_cmd + ' $SCRIPT -f $SOURCE > $TARGET'
src/mesa/main/enums.c: src/mapi/glapi/gen/gl_enums.py
	python $< -f src/mapi/glapi/gen/gl_and_es_API.xml > $@

# python_cmd + ' $SCRIPT -f $SOURCE > $TARGET'
src/mesa/main/api_exec.c: src/mapi/glapi/gen/gl_genexec.py
	python $< -f src/mapi/glapi/gen/gl_and_es_API.xml > $@

# python_cmd + ' $SCRIPT -f $SOURCE > $TARGET'
src/mapi/glapi/glapi_x86.S: src/mapi/glapi/gen/gl_x86_asm.py
	python $< -f src/mapi/glapi/gen/gl_and_es_API.xml > $@

# python_cmd + ' $SCRIPT -f $SOURCE > $TARGET'
src/mapi/glapi/glapi_x86-64.S: src/mapi/glapi/gen/gl_x86-64_asm.py
	python $< -f src/mapi/glapi/gen/gl_and_es_API.xml > $@

$(MAPI_GLAPI_OBJECTS_S): %.o : %.S
	@printf "%b" "\033[0;32mAssembling source object " $< "\033[m\n"
	@$(CC) -c $(GUCFLAGS) $(MAPI_GLAPI_INCLUDES) -o $@ $<

$(MAPI_GLAPI_OBJECTS_C): %.o : %.c
	@printf "%b" "\033[0;32mCompiling C source object " $< "\033[m\n"
	@$(CC) -c $(GUCFLAGS) $(MAPI_GLAPI_INCLUDES) -o $@ $<

$(MAPI_GLAPI_OBJECTS_CXX): %.o : %.cpp
	@printf "%b" "\033[0;32mCompiling C++ source object " $< "\033[m\n"
	@$(CXX) -c $(GUCXXFLAGS) $(MAPI_GLAPI_INCLUDES) -o $@ $<

#############################################
# Mesa Library
#############################################
build/vali-x86/mesa.lib: $(MESA_SOURCES_GEN_H) $(MESA_SOURCES_GEN_C) $(MESA_SOURCES_GEN_CXX) $(MESA_OBJECTS_S) $(MESA_OBJECTS_C) $(MESA_OBJECTS_CXX)
	@printf "%b" "\033[0;36mCreating static library " $@ "\033[m\n"
	@$(LD) /lib $(MESA_OBJECTS_S) $(MESA_OBJECTS_C) $(MESA_OBJECTS_CXX) $(MESA_LIBRARIES) /out:$@

# Generate from built host app
src/mesa/main/matypes.h: build/vali-x86/gen_matypes
	build/vali-x86/gen_matypes > $@

# python_cmd + ' $SCRIPT -f $SOURCE > $TARGET'
src/mesa/main/marshal_generated.h: src/mapi/glapi/gen/gl_marshal_h.py
	python $< -f src/mapi/glapi/gen/gl_and_es_API.xml > $@

# python_cmd + ' $SCRIPT ' + ' -f $SOURCE > $TARGET'
src/mesa/main/get_hash.h: src/mesa/main/get_hash_generator.py
	python $< -f src/mapi/glapi/gen/gl_and_es_API.xml > $@

# python_cmd + ' $SCRIPT ' + ' $SOURCE > $TARGET'
src/mesa/main/format_info.h: src/mesa/main/format_info.py src/mesa/main/formats.csv
	python $^ > $@

# python_cmd + ' $SCRIPT -f $SOURCE > $TARGET'
src/mesa/main/marshal_generated.c: src/mapi/glapi/gen/gl_marshal.py
	python $< -f src/mapi/glapi/gen/gl_and_es_API.xml > $@

# python_cmd + ' $SCRIPT ' + ' $SOURCE > $TARGET'
src/mesa/main/format_fallback.c: src/mesa/main/format_fallback.py src/mesa/main/formats.csv
	python $^ $@

# python_cmd + ' $SCRIPT ' + ' $SOURCE > $TARGET'
src/mesa/main/format_pack.c: src/mesa/main/format_pack.py src/mesa/main/formats.csv
	python $^ > $@

# python_cmd + ' $SCRIPT ' + ' $SOURCE > $TARGET'
src/mesa/main/format_unpack.c: src/mesa/main/format_unpack.py src/mesa/main/formats.csv
	python $^ > $@

src/mesa/program/lex.yy.c: src/mesa/program/program_lexer.l
	lex -o $@ $<

src/mesa/program/program_parse.tab.c: src/mesa/program/program_parse.y
	yacc -d -p _mesa_program_ -o $@ $<

$(MESA_OBJECTS_S): %.o : %.S
	@printf "%b" "\033[0;32mAssembling source object " $< "\033[m\n"
	@$(CC) -c $(GUCFLAGS) $(MESA_INCLUDES) -o $@ $<

$(MESA_OBJECTS_C): %.o : %.c
	@printf "%b" "\033[0;32mCompiling C source object " $< "\033[m\n"
	@$(CC) -c $(GUCFLAGS) $(MESA_INCLUDES) -o $@ $<

$(MESA_OBJECTS_CXX): %.o : %.cpp
	@printf "%b" "\033[0;32mCompiling C++ source object " $< "\033[m\n"
	@$(CXX) -c $(GUCXXFLAGS) $(MESA_INCLUDES) -o $@ $<


#############################################
# Gallium Auxiliary Library
#############################################
build/vali-x86/gallium-aux.lib: $(GAAUX_SOURCES_GEN_H) $(GAAUX_SOURCES_GEN_S) $(GAAUX_SOURCES_GEN_C) $(GAAUX_SOURCES_GEN_CXX) $(GAAUX_OBJECTS_S) $(GAAUX_OBJECTS_C) $(GAAUX_OBJECTS_CXX)
	@printf "%b" "\033[0;36mCreating static library " $@ "\033[m\n"
	@$(LD) /lib $(GAAUX_OBJECTS_S) $(GAAUX_OBJECTS_C) $(GAAUX_OBJECTS_CXX) $(GAAUX_LIBRARIES) /out:$@

# python_cmd + ' $SCRIPT > $TARGET'
src/gallium/auxiliary/indices/u_indices_gen.c: src/gallium/auxiliary/indices/u_indices_gen.py
	python $< > $@

# python_cmd + ' $SCRIPT > $TARGET'
src/gallium/auxiliary/indices/u_unfilled_gen.c: src/gallium/auxiliary/indices/u_unfilled_gen.py
	python $< > $@

# python_cmd + ' $SCRIPT $SOURCE > $TARGET'
src/gallium/auxiliary/util/u_format_table.c: src/gallium/auxiliary/util/u_format_table.py src/gallium/auxiliary/util/u_format.csv
	python $^ > $@

$(GAAUX_OBJECTS_S): %.o : %.S
	@printf "%b" "\033[0;32mAssembling source object " $< "\033[m\n"
	@$(CC) -c $(GUCFLAGS) $(GAAUX_INCLUDES) -o $@ $<

$(GAAUX_OBJECTS_C): %.o : %.c
	@printf "%b" "\033[0;32mCompiling C source object " $< "\033[m\n"
	@$(CC) -c $(GUCFLAGS) $(GAAUX_INCLUDES) -o $@ $<

$(GAAUX_OBJECTS_CXX): %.o : %.cpp
	@printf "%b" "\033[0;32mCompiling C++ source object " $< "\033[m\n"
	@$(CXX) -c $(GUCXXFLAGS) $(GAAUX_INCLUDES) -o $@ $<


#############################################
# Gallium Auxiliary Pipe Library
#############################################
build/vali-x86/gallium-pipe.lib: $(GAPIPE_SOURCES_GEN_H) $(GAPIPE_SOURCES_GEN_S) $(GAPIPE_SOURCES_GEN_C) $(GAPIPE_SOURCES_GEN_CXX) $(GAPIPE_OBJECTS_S) $(GAPIPE_OBJECTS_C) $(GAPIPE_OBJECTS_CXX)
	@printf "%b" "\033[0;36mCreating static library " $@ "\033[m\n"
	@$(LD) /lib $(GAPIPE_OBJECTS_S) $(GAPIPE_OBJECTS_C) $(GAPIPE_OBJECTS_CXX) $(GAPIPE_LIBRARIES) /out:$@

$(GAPIPE_OBJECTS_S): %.o : %.S
	@printf "%b" "\033[0;32mAssembling source object " $< "\033[m\n"
	@$(CC) -c $(GUCFLAGS) $(GAPIPE_INCLUDES) -o $@ $<

$(GAPIPE_OBJECTS_C): %.o : %.c
	@printf "%b" "\033[0;32mCompiling C source object " $< "\033[m\n"
	@$(CC) -c $(GUCFLAGS) $(GAPIPE_INCLUDES) -o $@ $<

$(GAPIPE_OBJECTS_CXX): %.o : %.cpp
	@printf "%b" "\033[0;32mCompiling C++ source object " $< "\033[m\n"
	@$(CXX) -c $(GUCXXFLAGS) $(GAPIPE_INCLUDES) -o $@ $<

#############################################
# Gallium LLVM Pipe Library
#############################################
build/vali-x86/gallium-llvmpipe.lib: $(GALLVMPIPE_SOURCES_GEN_H) $(GALLVMPIPE_SOURCES_GEN_S) $(GALLVMPIPE_SOURCES_GEN_C) $(GALLVMPIPE_SOURCES_GEN_CXX) $(GALLVMPIPE_OBJECTS_S) $(GALLVMPIPE_OBJECTS_C) $(GALLVMPIPE_OBJECTS_CXX)
	@printf "%b" "\033[0;36mCreating static library " $@ "\033[m\n"
	@$(LD) /lib $(GALLVMPIPE_OBJECTS_S) $(GALLVMPIPE_OBJECTS_C) $(GALLVMPIPE_OBJECTS_CXX) $(GALLVMPIPE_LIBRARIES) /out:$@

$(GALLVMPIPE_OBJECTS_S): %.o : %.S
	@printf "%b" "\033[0;32mAssembling source object " $< "\033[m\n"
	@$(CC) -c $(GUCFLAGS) $(GALLVMPIPE_INCLUDES) -o $@ $<

$(GALLVMPIPE_OBJECTS_C): %.o : %.c
	@printf "%b" "\033[0;32mCompiling C source object " $< "\033[m\n"
	@$(CC) -c $(GUCFLAGS) $(GALLVMPIPE_INCLUDES) -o $@ $<

$(GALLVMPIPE_OBJECTS_CXX): %.o : %.cpp
	@printf "%b" "\033[0;32mCompiling C++ source object " $< "\033[m\n"
	@$(CXX) -c $(GUCXXFLAGS) $(GALLVMPIPE_INCLUDES) -o $@ $<

#############################################
# Gallium Driver (rbug) Library
#############################################
build/vali-x86/gallium-rbug.lib: $(GARBUG_SOURCES_GEN_H) $(GARBUG_SOURCES_GEN_S) $(GARBUG_SOURCES_GEN_C) $(GARBUG_SOURCES_GEN_CXX) $(GARBUG_OBJECTS_S) $(GARBUG_OBJECTS_C) $(GARBUG_OBJECTS_CXX)
	@printf "%b" "\033[0;36mCreating static library " $@ "\033[m\n"
	@$(LD) /lib $(GARBUG_OBJECTS_S) $(GARBUG_OBJECTS_C) $(GARBUG_OBJECTS_CXX) $(GARBUG_LIBRARIES) /out:$@

$(GARBUG_OBJECTS_S): %.o : %.S
	@printf "%b" "\033[0;32mAssembling source object " $< "\033[m\n"
	@$(CC) -c $(GUCFLAGS) $(GARBUG_INCLUDES) -o $@ $<

$(GARBUG_OBJECTS_C): %.o : %.c
	@printf "%b" "\033[0;32mCompiling C source object " $< "\033[m\n"
	@$(CC) -c $(GUCFLAGS) $(GARBUG_INCLUDES) -o $@ $<

$(GARBUG_OBJECTS_CXX): %.o : %.cpp
	@printf "%b" "\033[0;32mCompiling C++ source object " $< "\033[m\n"
	@$(CXX) -c $(GUCXXFLAGS) $(GARBUG_INCLUDES) -o $@ $<

#############################################
# Gallium Driver (softpipe) Library
#############################################
build/vali-x86/gallium-softpipe.lib: $(GASOFTPIPE_SOURCES_GEN_H) $(GASOFTPIPE_SOURCES_GEN_S) $(GASOFTPIPE_SOURCES_GEN_C) $(GASOFTPIPE_SOURCES_GEN_CXX) $(GASOFTPIPE_OBJECTS_S) $(GASOFTPIPE_OBJECTS_C) $(GASOFTPIPE_OBJECTS_CXX)
	@printf "%b" "\033[0;36mCreating static library " $@ "\033[m\n"
	@$(LD) /lib $(GASOFTPIPE_OBJECTS_S) $(GASOFTPIPE_OBJECTS_C) $(GASOFTPIPE_OBJECTS_CXX) $(GASOFTPIPE_LIBRARIES) /out:$@

$(GASOFTPIPE_OBJECTS_S): %.o : %.S
	@printf "%b" "\033[0;32mAssembling source object " $< "\033[m\n"
	@$(CC) -c $(GUCFLAGS) $(GASOFTPIPE_INCLUDES) -o $@ $<

$(GASOFTPIPE_OBJECTS_C): %.o : %.c
	@printf "%b" "\033[0;32mCompiling C source object " $< "\033[m\n"
	@$(CC) -c $(GUCFLAGS) $(GASOFTPIPE_INCLUDES) -o $@ $<

$(GASOFTPIPE_OBJECTS_CXX): %.o : %.cpp
	@printf "%b" "\033[0;32mCompiling C++ source object " $< "\033[m\n"
	@$(CXX) -c $(GUCXXFLAGS) $(GASOFTPIPE_INCLUDES) -o $@ $<

#############################################
# Gallium Driver (svga) Library
#############################################
build/vali-x86/gallium-svga.lib: $(GASVGA_SOURCES_GEN_H) $(GASVGA_SOURCES_GEN_S) $(GASVGA_SOURCES_GEN_C) $(GASVGA_SOURCES_GEN_CXX) $(GASVGA_OBJECTS_S) $(GASVGA_OBJECTS_C) $(GASVGA_OBJECTS_CXX)
	@printf "%b" "\033[0;36mCreating static library " $@ "\033[m\n"
	@$(LD) /lib $(GASVGA_OBJECTS_S) $(GASVGA_OBJECTS_C) $(GASVGA_OBJECTS_CXX) $(GASVGA_LIBRARIES) /out:$@

$(GASVGA_OBJECTS_S): %.o : %.S
	@printf "%b" "\033[0;32mAssembling source object " $< "\033[m\n"
	@$(CC) -c $(GUCFLAGS) $(GASVGA_INCLUDES) -o $@ $<

$(GASVGA_OBJECTS_C): %.o : %.c
	@printf "%b" "\033[0;32mCompiling C source object " $< "\033[m\n"
	@$(CC) -c $(GUCFLAGS) $(GASVGA_INCLUDES) -o $@ $<

$(GASVGA_OBJECTS_CXX): %.o : %.cpp
	@printf "%b" "\033[0;32mCompiling C++ source object " $< "\033[m\n"
	@$(CXX) -c $(GUCXXFLAGS) $(GASVGA_INCLUDES) -o $@ $<

#############################################
# Gallium Driver (trace) Library
#############################################
build/vali-x86/gallium-trace.lib: $(GATRACE_SOURCES_GEN_H) $(GATRACE_SOURCES_GEN_S) $(GATRACE_SOURCES_GEN_C) $(GATRACE_SOURCES_GEN_CXX) $(GATRACE_OBJECTS_S) $(GATRACE_OBJECTS_C) $(GATRACE_OBJECTS_CXX)
	@printf "%b" "\033[0;36mCreating static library " $@ "\033[m\n"
	@$(LD) /lib $(GATRACE_OBJECTS_S) $(GATRACE_OBJECTS_C) $(GATRACE_OBJECTS_CXX) $(GATRACE_LIBRARIES) /out:$@

$(GATRACE_OBJECTS_S): %.o : %.S
	@printf "%b" "\033[0;32mAssembling source object " $< "\033[m\n"
	@$(CC) -c $(GUCFLAGS) $(GATRACE_INCLUDES) -o $@ $<

$(GATRACE_OBJECTS_C): %.o : %.c
	@printf "%b" "\033[0;32mCompiling C source object " $< "\033[m\n"
	@$(CC) -c $(GUCFLAGS) $(GATRACE_INCLUDES) -o $@ $<

$(GATRACE_OBJECTS_CXX): %.o : %.cpp
	@printf "%b" "\033[0;32mCompiling C++ source object " $< "\033[m\n"
	@$(CXX) -c $(GUCXXFLAGS) $(GATRACE_INCLUDES) -o $@ $<

#############################################
# Gallium Driver (swr) Library
#############################################
build/vali-x86/gallium-swr.lib: $(GASWR_SOURCES_GEN_H) $(GASWR_SOURCES_GEN_S) $(GASWR_SOURCES_GEN_C) $(GASWR_SOURCES_GEN_CXX) $(GASWR_LIB_OBJECTS_S) $(GASWR_LIB_OBJECTS_C) $(GASWR_LIB_OBJECTS_CXX)
	@printf "%b" "\033[0;36mCreating static library " $@ "\033[m\n"
	@$(LD) /lib $(GASWR_LIB_OBJECTS_S) $(GASWR_LIB_OBJECTS_C) $(GASWR_LIB_OBJECTS_CXX) /out:$@

$(GASWR_LIB_OBJECTS_S): %.o : %.S
	@printf "%b" "\033[0;32mAssembling source object " $< "\033[m\n"
	@$(CC) -c $(GUCFLAGS) $(GASWR_LIB_INCLUDES) -o $@ $<

$(GASWR_LIB_OBJECTS_C): %.o : %.c
	@printf "%b" "\033[0;32mCompiling C source object " $< "\033[m\n"
	@$(CC) -c $(GUCFLAGS) $(GASWR_LIB_INCLUDES) -o $@ $<

$(GASWR_LIB_OBJECTS_CXX): %.o : %.cpp
	@printf "%b" "\033[0;32mCompiling C++ source object " $< "\033[m\n"
	@$(CXX) -c $(GUCXXFLAGS) $(GASWR_LIB_INCLUDES) -o $@ $<

# python_cmd + ' $SCRIPT --output $TARGET --gen_h'
src/gallium/drivers/swr/rasterizer/codegen/gen_knobs.h: src/gallium/drivers/swr/rasterizer/codegen/gen_knobs.py
	python $< --output $@ --gen_h

# python_cmd + ' $SCRIPT --input rasterizer/core/state.h --output $TARGET'
src/gallium/drivers/swr/rasterizer/jitter/gen_state_llvm.h: src/gallium/drivers/swr/rasterizer/codegen/gen_llvm_types.py
	python $< --input src/gallium/drivers/swr/rasterizer/core/state.h --output $@

# python_cmd + ' $SCRIPT --input llvm/IR/IRBuilder.h --output /rasterizer/jitter --gen_h'
src/gallium/drivers/swr/rasterizer/jitter/gen_builder.hpp: src/gallium/drivers/swr/rasterizer/codegen/gen_llvm_ir_macros.py
	python $< --input $(INCLUDES)/llvm/IR/IRBuilder.h --output src/gallium/drivers/swr/rasterizer/jitter --gen_h

# python_cmd + ' $SCRIPT --output ' + bldroot + '/rasterizer/jitter --gen_x86_h'
src/gallium/drivers/swr/rasterizer/jitter/gen_builder_x86.hpp: src/gallium/drivers/swr/rasterizer/codegen/gen_llvm_ir_macros.py
	python $< --output src/gallium/drivers/swr/rasterizer/jitter --gen_x86_h

# python_cmd + ' $SCRIPT --input swr_context.h --output $TARGET'
src/gallium/drivers/swr/gen_swr_context_llvm.h: src/gallium/drivers/swr/rasterizer/codegen/gen_llvm_types.py
	python $< --input src/gallium/drivers/swr/swr_context.h --output $@

# python_cmd + ' $SCRIPT --proto rasterizer/archrast/events.proto --output $TARGET --gen_event_h'
src/gallium/drivers/swr/rasterizer/archrast/gen_ar_event.hpp: src/gallium/drivers/swr/rasterizer/codegen/gen_archrast.py
	python $< --proto src/gallium/drivers/swr/rasterizer/archrast/events.proto --output $@ --gen_event_h

# python_cmd + ' $SCRIPT --proto rasterizer/archrast/events.proto --output $TARGET --gen_eventhandler_h'
src/gallium/drivers/swr/rasterizer/archrast/gen_ar_eventhandler.hpp: src/gallium/drivers/swr/rasterizer/codegen/gen_archrast.py
	python $< --proto src/gallium/drivers/swr/rasterizer/archrast/events.proto --output $@ --gen_eventhandler_h

# python_cmd + ' $SCRIPT --proto rasterizer/archrast/events.proto --output $TARGET --gen_eventhandlerfile_h'
src/gallium/drivers/swr/rasterizer/archrast/gen_ar_eventhandlerfile.hpp: src/gallium/drivers/swr/rasterizer/codegen/gen_archrast.py
	python $< --proto src/gallium/drivers/swr/rasterizer/archrast/events.proto --output $@ --gen_eventhandlerfile_h

# python_cmd + ' $SCRIPT --outdir ' + bldroot + '/rasterizer/core/backends --dim 5 2 3 2 2 2 --numfiles ' + 4 + ' --cpp --hpp'
src/gallium/drivers/swr/rasterizer/core/backends/gen_BackendPixelRate.hpp: src/gallium/drivers/swr/rasterizer/codegen/gen_backends.py
	python $< --outdir src/gallium/drivers/swr/rasterizer/core/backends --dim 5 2 3 2 2 2 --numfiles 4 --cpp --hpp

# python_cmd + ' $SCRIPT --outdir /rasterizer/core/backends --rast --dim 5 2 2 3 5 2 --numfiles ' + 4 + ' --cpp --hpp'
src/gallium/drivers/swr/rasterizer/core/backends/gen_rasterizer.hpp: src/gallium/drivers/swr/rasterizer/codegen/gen_backends.py
	python $< --outdir src/gallium/drivers/swr/rasterizer/core/backends --rast --dim 5 2 2 3 5 2 --numfiles 4 --cpp --hpp

# python_cmd + ' $SCRIPT --output $TARGET --gen_cpp'
src/gallium/drivers/swr/rasterizer/codegen/gen_knobs.cpp: src/gallium/drivers/swr/rasterizer/codegen/gen_knobs.py
	python $< --output $@ --gen_cpp

# python_cmd + ' $SCRIPT --proto rasterizer/archrast/events.proto --output $TARGET --gen_event_cpp'
src/gallium/drivers/swr/rasterizer/archrast/gen_ar_event.cpp: src/gallium/drivers/swr/rasterizer/codegen/gen_archrast.py
	python $< --proto src/gallium/drivers/swr/rasterizer/archrast/events.proto --output $@ --gen_event_cpp

build/vali-x86/gallium-swr-avx.dll: $(GASWR_SOURCES_GEN_H) $(GASWR_SOURCES_GEN_S) $(GASWR_SOURCES_GEN_C) $(GASWR_SOURCES_GEN_CXX) $(GASWR_AVX_OBJECTS_S) $(GASWR_AVX_OBJECTS_C) $(GASWR_AVX_OBJECTS_CXX)
	@printf "%b" "\033[0;36mCreating shared library " $@ "\033[m\n"
	@$(LD) $(LDSO) $(GASWR_AVX_LIBRARIES) $(GASWR_AVX_OBJECTS_S) $(GASWR_AVX_OBJECTS_C) $(GASWR_AVX_OBJECTS_CXX) /out:$@

$(GASWR_AVX_OBJECTS_S): %.avx_o : %.S
	@printf "%b" "\033[0;32mAssembling source object " $< "\033[m\n"
	@$(CC) -c $(GUCFLAGS) $(GASWR_AVX_INCLUDES) -o $@ $<

$(GASWR_AVX_OBJECTS_C): %.avx_o : %.c
	@printf "%b" "\033[0;32mCompiling C source object " $< "\033[m\n"
	@$(CC) -c $(GUCFLAGS) $(GASWR_AVX_INCLUDES) -o $@ $<

$(GASWR_AVX_OBJECTS_CXX): %.avx_o : %.cpp
	@printf "%b" "\033[0;32mCompiling C++ source object " $< "\033[m\n"
	@$(CXX) -c $(GUCXXFLAGS) $(GASWR_AVX_INCLUDES) -o $@ $<

build/vali-x86/gallium-swr-avx2.dll: $(GASWR_SOURCES_GEN_H) $(GASWR_SOURCES_GEN_S) $(GASWR_SOURCES_GEN_C) $(GASWR_SOURCES_GEN_CXX) $(GASWR_AVX2_OBJECTS_S) $(GASWR_AVX2_OBJECTS_C) $(GASWR_AVX2_OBJECTS_CXX)
	@printf "%b" "\033[0;36mCreating shared library " $@ "\033[m\n"
	@$(LD) $(LDSO) $(GASWR_AVX2_LIBRARIES) $(GASWR_AVX2_OBJECTS_S) $(GASWR_AVX2_OBJECTS_C) $(GASWR_AVX2_OBJECTS_CXX) /out:$@

$(GASWR_AVX2_OBJECTS_S): %.avx2_o : %.S
	@printf "%b" "\033[0;32mAssembling source object " $< "\033[m\n"
	@$(CC) -c $(GUCFLAGS) $(GASWR_AVX2_INCLUDES) -o $@ $<

$(GASWR_AVX2_OBJECTS_C): %.av2_o : %.c
	@printf "%b" "\033[0;32mCompiling C source object " $< "\033[m\n"
	@$(CC) -c $(GUCFLAGS) $(GASWR_AVX2_INCLUDES) -o $@ $<

$(GASWR_AVX2_OBJECTS_CXX): %.avx2_o : %.cpp
	@printf "%b" "\033[0;32mCompiling C++ source object " $< "\033[m\n"
	@$(CXX) -c $(GUCXXFLAGS) $(GASWR_AVX2_INCLUDES) -o $@ $<

#############################################
# Gallium Winsys (sw/null) Library
#############################################
build/vali-x86/gallium-winsys-null.lib: $(GAWINSYS_NULL_SOURCES_GEN_H) $(GAWINSYS_NULL_SOURCES_GEN_S) $(GAWINSYS_NULL_SOURCES_GEN_C) $(GAWINSYS_NULL_SOURCES_GEN_CXX) $(GAWINSYS_NULL_OBJECTS_S) $(GAWINSYS_NULL_OBJECTS_C) $(GAWINSYS_NULL_OBJECTS_CXX)
	@printf "%b" "\033[0;36mCreating static library " $@ "\033[m\n"
	@$(LD) /lib $(GAWINSYS_NULL_OBJECTS_S) $(GAWINSYS_NULL_OBJECTS_C) $(GAWINSYS_NULL_OBJECTS_CXX) /out:$@

$(GAWINSYS_NULL_OBJECTS_S): %.o : %.S
	@printf "%b" "\033[0;32mAssembling source object " $< "\033[m\n"
	@$(CC) -c $(GUCFLAGS) $(GAWINSYS_NULL_INCLUDES) -o $@ $<

$(GAWINSYS_NULL_OBJECTS_C): %.o : %.c
	@printf "%b" "\033[0;32mCompiling C source object " $< "\033[m\n"
	@$(CC) -c $(GUCFLAGS) $(GAWINSYS_NULL_INCLUDES) -o $@ $<

$(GAWINSYS_NULL_OBJECTS_CXX): %.o : %.cpp
	@printf "%b" "\033[0;32mCompiling C++ source object " $< "\033[m\n"
	@$(CXX) -c $(GUCXXFLAGS) $(GAWINSYS_NULL_INCLUDES) -o $@ $<

#############################################
# Gallium Winsys (sw/wrapper) Library
#############################################
build/vali-x86/gallium-winsys-wrapper.lib: $(GAWINSYS_WRAPPER_SOURCES_GEN_H) $(GAWINSYS_WRAPPER_SOURCES_GEN_S) $(GAWINSYS_WRAPPER_SOURCES_GEN_C) $(GAWINSYS_WRAPPER_SOURCES_GEN_CXX) $(GAWINSYS_WRAPPER_OBJECTS_S) $(GAWINSYS_WRAPPER_OBJECTS_C) $(GAWINSYS_WRAPPER_OBJECTS_CXX)
	@printf "%b" "\033[0;36mCreating static library " $@ "\033[m\n"
	@$(LD) /lib $(GAWINSYS_WRAPPER_OBJECTS_S) $(GAWINSYS_WRAPPER_OBJECTS_C) $(GAWINSYS_WRAPPER_OBJECTS_CXX) /out:$@

$(GAWINSYS_WRAPPER_OBJECTS_S): %.o : %.S
	@printf "%b" "\033[0;32mAssembling source object " $< "\033[m\n"
	@$(CC) -c $(GUCFLAGS) $(GAWINSYS_WRAPPER_INCLUDES) -o $@ $<

$(GAWINSYS_WRAPPER_OBJECTS_C): %.o : %.c
	@printf "%b" "\033[0;32mCompiling C source object " $< "\033[m\n"
	@$(CC) -c $(GUCFLAGS) $(GAWINSYS_WRAPPER_INCLUDES) -o $@ $<

$(GAWINSYS_WRAPPER_OBJECTS_CXX): %.o : %.cpp
	@printf "%b" "\033[0;32mCompiling C++ source object " $< "\033[m\n"
	@$(CXX) -c $(GUCXXFLAGS) $(GAWINSYS_WRAPPER_INCLUDES) -o $@ $<

#############################################
# Gallium state-tracker (osmesa) Library
#############################################
build/vali-x86/gallium-st-osmesa.lib: $(GAST_OSMESA_SOURCES_GEN_H) $(GAST_OSMESA_SOURCES_GEN_S) $(GAST_OSMESA_SOURCES_GEN_C) $(GAST_OSMESA_SOURCES_GEN_CXX) $(GAST_OSMESA_OBJECTS_S) $(GAST_OSMESA_OBJECTS_C) $(GAST_OSMESA_OBJECTS_CXX)
	@printf "%b" "\033[0;36mCreating static library " $@ "\033[m\n"
	@$(LD) /lib $(GAST_OSMESA_OBJECTS_S) $(GAST_OSMESA_OBJECTS_C) $(GAST_OSMESA_OBJECTS_CXX) /out:$@

$(GAST_OSMESA_OBJECTS_S): %.o : %.S
	@printf "%b" "\033[0;32mAssembling source object " $< "\033[m\n"
	@$(CC) -c $(GUCFLAGS) $(GAST_OSMESA_INCLUDES) -o $@ $<

$(GAST_OSMESA_OBJECTS_C): %.o : %.c
	@printf "%b" "\033[0;32mCompiling C source object " $< "\033[m\n"
	@$(CC) -c $(GUCFLAGS) $(GAST_OSMESA_INCLUDES) -o $@ $<

$(GAST_OSMESA_OBJECTS_CXX): %.o : %.cpp
	@printf "%b" "\033[0;32mCompiling C++ source object " $< "\033[m\n"
	@$(CXX) -c $(GUCXXFLAGS) $(GAST_OSMESA_INCLUDES) -o $@ $<

#############################################
# Shared Libraries
#############################################
build/vali-x86/osmesa.dll: $(OSMESA_DLL_SOURCES_GEN_H) $(OSMESA_DLL_SOURCES_GEN_C) $(OSMESA_DLL_SOURCES_GEN_CXX) $(OSMESA_DLL_OBJECTS_C) $(OSMESA_DLL_OBJECTS_CXX)
	@printf "%b" "\033[0;36mCreating shared library " $@ "\033[m\n"
	@$(LD) $(LDSO) $(OSMESA_DLL_LIBRARIES) $(OSMESA_DLL_OBJECTS_C) $(OSMESA_DLL_OBJECTS_CXX) /out:$@

$(OSMESA_DLL_OBJECTS_C): %.o : %.c
	@printf "%b" "\033[0;32mCompiling C source object " $< "\033[m\n"
	@$(CC) -c $(GUCFLAGS) $(OSMESA_DLL_INCLUDES) -o $@ $<

$(OSMESA_DLL_OBJECTS_CXX): %.o : %.cpp
	@printf "%b" "\033[0;32mCompiling C++ source object " $< "\033[m\n"
	@$(CXX) -c $(GUCXXFLAGS) $(OSMESA_DLL_INCLUDES) -o $@ $<



build/vali-x86/glapi.dll: $(GLAPI_DLL_SOURCES_GEN_H) $(GLAPI_DLL_SOURCES_GEN_C) $(GLAPI_DLL_SOURCES_GEN_CXX) $(GLAPI_DLL_OBJECTS_C) $(GLAPI_DLL_OBJECTS_CXX)
	@printf "%b" "\033[0;36mCreating shared library " $@ "\033[m\n"
	@$(LD) $(LDSO) $(GLAPI_DLL_LIBRARIES) $(GLAPI_DLL_OBJECTS_C) $(GLAPI_DLL_OBJECTS_CXX) /out:$@

# python_cmd + ' $SCRIPT ' + '--printer %s $SOURCE > $TARGET' % (printer),
src/mapi/shared-glapi-tmp.h: src/mapi/mapi_abi.py
	@python $< --printer shared-glapi $(MAPI_GEN_XML) > $@

src/mapi/gl_entry.c: src/mapi/entry.c
	cp $< $@

src/mapi/gl_mapi_glapi.c: src/mapi/mapi_glapi.c
	cp $< $@

src/mapi/gl_stub.c: src/mapi/stub.c
	cp $< $@

src/mapi/gl_table.c: src/mapi/table.c
	cp $< $@

src/mapi/gl_u_current.c: src/mapi/u_current.c
	cp $< $@

src/mapi/gl_u_execmem.c: src/mapi/u_execmem.c
	cp $< $@

src/mapi/gl_main.cpp: src/mapi/main.cpp
	cp $< $@

$(GLAPI_DLL_OBJECTS_C): %.o : %.c
	@printf "%b" "\033[0;32mCompiling C source object " $< "\033[m\n"
	@$(CC) -c $(GUCFLAGS) $(GLAPI_DLL_INCLUDES) -o $@ $<

$(GLAPI_DLL_OBJECTS_CXX): %.o : %.cpp
	@printf "%b" "\033[0;32mCompiling C++ source object " $< "\033[m\n"
	@$(CXX) -c $(GUCXXFLAGS) $(GLAPI_DLL_INCLUDES) -o $@ $<



build/vali-x86/GLESv1.dll: $(GLESV1_DLL_SOURCES_GEN_H) $(GLESV1_DLL_SOURCES_GEN_C) $(GLESV1_DLL_SOURCES_GEN_CXX) $(GLESV1_DLL_OBJECTS_C) $(GLESV1_DLL_OBJECTS_CXX)
	@printf "%b" "\033[0;36mCreating shared library " $@ "\033[m\n"
	@$(LD) $(LDSO) $(GLESV1_DLL_LIBRARIES) $(GLESV1_DLL_OBJECTS_C) $(GLESV1_DLL_OBJECTS_CXX) /out:$@

# python_cmd + ' $SCRIPT ' + '--printer %s $SOURCE > $TARGET' % (printer),
src/mapi/es1api-tmp.h: src/mapi/mapi_abi.py
	@python $< --printer es1api $(MAPI_GEN_XML) > $@

src/mapi/gl1_entry.c: src/mapi/entry.c
	cp $< $@

src/mapi/gl1_main.cpp: src/mapi/main.cpp
	cp $< $@

$(GLESV1_DLL_OBJECTS_C): %.o : %.c
	@printf "%b" "\033[0;32mCompiling C source object " $< "\033[m\n"
	@$(CC) -c $(GUCFLAGS) $(GLESV1_DLL_INCLUDES) -o $@ $<

$(GLESV1_DLL_OBJECTS_CXX): %.o : %.cpp
	@printf "%b" "\033[0;32mCompiling C++ source object " $< "\033[m\n"
	@$(CXX) -c $(GUCXXFLAGS) $(GLESV1_DLL_INCLUDES) -o $@ $<



build/vali-x86/GLESv2.dll: $(GLESV2_DLL_SOURCES_GEN_H) $(GLESV2_DLL_SOURCES_GEN_C) $(GLESV2_DLL_SOURCES_GEN_CXX) $(GLESV2_DLL_OBJECTS_C) $(GLESV2_DLL_OBJECTS_CXX)
	@printf "%b" "\033[0;36mCreating shared library " $@ "\033[m\n"
	@$(LD) $(LDSO) $(GLESV2_DLL_LIBRARIES) $(GLESV2_DLL_OBJECTS_C) $(GLESV2_DLL_OBJECTS_CXX) /out:$@

# python_cmd + ' $SCRIPT ' + '--printer %s $SOURCE > $TARGET' % (printer),
src/mapi/es2api-tmp.h: src/mapi/mapi_abi.py
	@python $< --printer es2api $(MAPI_GEN_XML) > $@

src/mapi/gl2_entry.c: src/mapi/entry.c
	cp $< $@

src/mapi/gl2_main.cpp: src/mapi/main.cpp
	cp $< $@

$(GLESV2_DLL_OBJECTS_C): %.o : %.c
	@printf "%b" "\033[0;32mCompiling C source object " $< "\033[m\n"
	@$(CC) -c $(GUCFLAGS) $(GLESV2_DLL_INCLUDES) -o $@ $<

$(GLESV2_DLL_OBJECTS_CXX): %.o : %.cpp
	@printf "%b" "\033[0;32mCompiling C++ source object " $< "\033[m\n"
	@$(CXX) -c $(GUCXXFLAGS) $(GLESV2_DLL_INCLUDES) -o $@ $<


build/vali-x86/gallium-graw-null.dll: $(GRAW_NULL_SOURCES_GEN_H) $(GRAW_NULLSOURCES_GEN_C) $(GRAW_NULL_SOURCES_GEN_CXX) $(GRAW_NULL_OBJECTS_C) $(GRAW_NULL_OBJECTS_CXX)
	@printf "%b" "\033[0;36mCreating shared library " $@ "\033[m\n"
	@$(LD) $(LDSO) $(GRAW_NULL_LIBRARIES) $(GRAW_NULL_OBJECTS_C) $(GRAW_NULL_OBJECTS_CXX) /out:$@

$(GRAW_NULL_OBJECTS_C): %.o : %.c
	@printf "%b" "\033[0;32mCompiling C source object " $< "\033[m\n"
	@$(CC) -c $(GUCFLAGS) $(GRAW_NULL_INCLUDES) -o $@ $<

$(GRAW_NULL_OBJECTS_CXX): %.o : %.cpp
	@printf "%b" "\033[0;32mCompiling C++ source object " $< "\033[m\n"
	@$(CXX) -c $(GUCXXFLAGS) $(GRAW_NULL_INCLUDES) -o $@ $<

build/vali-x86/gallium-osmesa.dll: $(GA_OSMESA_SOURCES_GEN_H) $(GA_OSMESA_SOURCES_GEN_C) $(GA_OSMESA_SOURCES_GEN_CXX) $(GA_OSMESA_OBJECTS_C) $(GA_OSMESA_OBJECTS_CXX)
	@printf "%b" "\033[0;36mCreating shared library " $@ "\033[m\n"
	@$(LD) $(LDSO) $(GA_OSMESA_LIBRARIES) $(GA_OSMESA_OBJECTS_C) $(GA_OSMESA_OBJECTS_CXX) /out:$@

$(GA_OSMESA_OBJECTS_C): %.o : %.c
	@printf "%b" "\033[0;32mCompiling C source object " $< "\033[m\n"
	@$(CC) -c $(GUCFLAGS) $(GA_OSMESA_INCLUDES) -o $@ $<

$(GA_OSMESA_OBJECTS_CXX): %.o : %.cpp
	@printf "%b" "\033[0;32mCompiling C++ source object " $< "\033[m\n"
	@$(CXX) -c $(GUCXXFLAGS) $(GA_OSMESA_INCLUDES) -o $@ $<

#############################################
# Applications
#############################################
build/vali-x86/gen_matypes: src/mesa/x86/gen_matypes.c
	@gcc -DHAVE_PTHREAD -Isrc -Isrc/mesa -Iinclude -Isrc/mapi -o $@ $<




build/vali-x86/compiler-glsl.app: $(COMPILER_GLSL_APP_SOURCES_GEN_H) $(COMPILER_GLSL_APP_SOURCES_GEN_C) $(COMPILER_GLSL_APP_SOURCES_GEN_CXX) $(COMPILER_GLSL_APP_OBJECTS_C) $(COMPILER_GLSL_APP_OBJECTS_CXX)
	@printf "%b" "\033[0;36mCreating application " $@ "\033[m\n"
	@$(LD) $(LDAPP) $(COMPILER_GLSL_APP_OBJECTS_C) $(COMPILER_GLSL_APP_OBJECTS_CXX) $(COMPILER_GLSL_APP_LIBRARIES) /out:$@

$(COMPILER_GLSL_APP_OBJECTS_C): %.o : %.c
	@printf "%b" "\033[0;32mCompiling C source object " $< "\033[m\n"
	@$(CC) -c $(GUCFLAGS) $(COMPILER_GLSL_APP_INCLUDES) -o $@ $<

$(COMPILER_GLSL_APP_OBJECTS_CXX): %.o : %.cpp
	@printf "%b" "\033[0;32mCompiling C++ source object " $< "\033[m\n"
	@$(CXX) -c $(GUCXXFLAGS) $(COMPILER_GLSL_APP_INCLUDES) -o $@ $<





build/vali-x86/glcpp.app: $(GLCPP_APP_SOURCES_GEN_H) $(GLCPP_APP_SOURCES_GEN_C) $(GLCPP_APP_SOURCES_GEN_CXX) $(GLCPP_APP_OBJECTS_C) $(GLCPP_APP_OBJECTS_CXX)
	@printf "%b" "\033[0;36mCreating application " $@ "\033[m\n"
	@$(LD) $(LDAPP) $(GLCPP_APP_OBJECTS_C) $(GLCPP_APP_OBJECTS_CXX) $(GLCPP_APP_LIBRARIES) /out:$@

$(GLCPP_APP_OBJECTS_C): %.o : %.c
	@printf "%b" "\033[0;32mCompiling C source object " $< "\033[m\n"
	@$(CC) -c $(GUCFLAGS) $(GLCPP_APP_INCLUDES) -o $@ $<

$(GLCPP_APP_OBJECTS_CXX): %.o : %.cpp
	@printf "%b" "\033[0;32mCompiling C++ source object " $< "\033[m\n"
	@$(CXX) -c $(GUCXXFLAGS) $(GLCPP_APP_INCLUDES) -o $@ $<

.PHONY: clean
clean:
	@rm -rf build/vali-x86
	@rm -f $(UTIL_SOURCES_GEN_H) $(UTIL_SOURCES_GEN_C) $(UTIL_SOURCES_GEN_CXX)
	@rm -f $(UTIL_OBJECTS_C) $(UTIL_OBJECTS_CXX)
	@rm -f $(COMPILER_SOURCES_GEN_H) $(COMPILER_SOURCES_GEN_C) $(COMPILER_SOURCES_GEN_CXX)
	@rm -f $(COMPILER_OBJECTS_C) $(COMPILER_OBJECTS_CXX)
	@rm -f $(COMPILER_GLSL_SOURCES_GEN_H) $(COMPILER_GLSL_SOURCES_GEN_C) $(COMPILER_GLSL_SOURCES_GEN_CXX)
	@rm -f $(COMPILER_GLSL_OBJECTS_C) $(COMPILER_GLSL_OBJECTS_CXX)
	@rm -f $(COMPILER_GLSL_APP_SOURCES_GEN_H) $(COMPILER_GLSL_APP_SOURCES_GEN_C) $(COMPILER_GLSL_APP_SOURCES_GEN_CXX)
	@rm -f $(COMPILER_GLSL_APP_OBJECTS_C) $(COMPILER_GLSL_APP_OBJECTS_CXX)
	@rm -f $(GLCPP_APP_SOURCES_GEN_H) $(GLCPP_APP_SOURCES_GEN_C) $(GLCPP_APP_SOURCES_GEN_CXX)
	@rm -f $(GLCPP_APP_OBJECTS_C) $(GLCPP_APP_OBJECTS_CXX)
	@rm -f $(COMPILER_NIR_SOURCES_GEN_H) $(COMPILER_NIR_SOURCES_GEN_C) $(COMPILER_NIR_SOURCES_GEN_CXX)
	@rm -f $(COMPILER_NIR_OBJECTS_C) $(COMPILER_NIR_OBJECTS_CXX)
	@rm -f $(LOADER_SOURCES_GEN_H) $(LOADER_SOURCES_GEN_C) $(LOADER_SOURCES_GEN_CXX)
	@rm -f $(LOADER_OBJECTS_C) $(LOADER_OBJECTS_CXX)
	@rm -f $(MAPI_GLAPI_SOURCES_GEN_H) $(MAPI_GLAPI_SOURCES_GEN_S) $(MAPI_GLAPI_SOURCES_GEN_C) $(MAPI_GLAPI_SOURCES_GEN_CXX)
	@rm -f $(MAPI_GLAPI_OBJECTS_S) $(MAPI_GLAPI_OBJECTS_C) $(MAPI_GLAPI_OBJECTS_CXX)
	@rm -f $(MESA_SOURCES_GEN_H) $(MESA_SOURCES_GEN_S) $(MESA_SOURCES_GEN_C) $(MESA_SOURCES_GEN_CXX)
	@rm -f $(MESA_OBJECTS_S) $(MESA_OBJECTS_C) $(MESA_OBJECTS_CXX)
	@rm -f $(OSMESA_DLL_SOURCES_GEN_H) $(OSMESA_DLL_SOURCES_GEN_C) $(OSMESA_DLL_SOURCES_GEN_CXX)
	@rm -f $(OSMESA_DLL_OBJECTS_C) $(OSMESA_DLL_OBJECTS_CXX)
	@rm -f $(GLAPI_DLL_SOURCES_GEN_H) $(GLAPI_DLL_SOURCES_GEN_C) $(GLAPI_DLL_SOURCES_GEN_CXX)
	@rm -f $(GLAPI_DLL_OBJECTS_C) $(GLAPI_DLL_OBJECTS_CXX)
	@rm -f $(GLESV1_DLL_SOURCES_GEN_H) $(GLESV1_DLL_SOURCES_GEN_C) $(GLESV1_DLL_SOURCES_GEN_CXX)
	@rm -f $(GLESV1_DLL_OBJECTS_C) $(GLESV1_DLL_OBJECTS_CXX)
	@rm -f $(GLESV2_DLL_SOURCES_GEN_H) $(GLESV2_DLL_SOURCES_GEN_C) $(GLESV2_DLL_SOURCES_GEN_CXX)
	@rm -f $(GLESV2_DLL_OBJECTS_C) $(GLESV2_DLL_OBJECTS_CXX)
	@rm -f $(GAAUX_SOURCES_GEN_H) $(GAAUX_SOURCES_GEN_S) $(GAAUX_SOURCES_GEN_C) $(GAAUX_SOURCES_GEN_CXX)
	@rm -f $(GAAUX_OBJECTS_S) $(GAAUX_OBJECTS_C) $(GAAUX_OBJECTS_CXX)
	@rm -f $(GAPIPE_SOURCES_GEN_H) $(GAPIPE_SOURCES_GEN_S) $(GAPIPE_SOURCES_GEN_C) $(GAPIPE_SOURCES_GEN_CXX)
	@rm -f $(GAPIPE_OBJECTS_S) $(GAPIPE_OBJECTS_C) $(GAPIPE_OBJECTS_CXX)
	@rm -f $(GALLVMPIPE_SOURCES_GEN_H) $(GALLVMPIPE_SOURCES_GEN_S) $(GALLVMPIPE_SOURCES_GEN_C) $(GALLVMPIPE_SOURCES_GEN_CXX)
	@rm -f $(GALLVMPIPE_OBJECTS_S) $(GALLVMPIPE_OBJECTS_C) $(GALLVMPIPE_OBJECTS_CXX)
	@rm -f $(GARBUG_SOURCES_GEN_H) $(GARBUG_SOURCES_GEN_S) $(GARBUG_SOURCES_GEN_C) $(GARBUG_SOURCES_GEN_CXX)
	@rm -f $(GARBUG_OBJECTS_S) $(GARBUG_OBJECTS_C) $(GARBUG_OBJECTS_CXX)
	@rm -f $(GASOFTPIPE_SOURCES_GEN_H) $(GASOFTPIPE_SOURCES_GEN_S) $(GASOFTPIPE_SOURCES_GEN_C) $(GASOFTPIPE_SOURCES_GEN_CXX)
	@rm -f $(GASOFTPIPE_OBJECTS_S) $(GASOFTPIPE_OBJECTS_C) $(GASOFTPIPE_OBJECTS_CXX)
	@rm -f $(GASVGA_SOURCES_GEN_H) $(GASVGA_SOURCES_GEN_S) $(GASVGA_SOURCES_GEN_C) $(GASVGA_SOURCES_GEN_CXX)
	@rm -f $(GASVGA_OBJECTS_S) $(GASVGA_OBJECTS_C) $(GASVGA_OBJECTS_CXX)
	@rm -f $(GATRACE_SOURCES_GEN_H) $(GATRACE_SOURCES_GEN_S) $(GATRACE_SOURCES_GEN_C) $(GATRACE_SOURCES_GEN_CXX)
	@rm -f $(GATRACE_OBJECTS_S) $(GATRACE_OBJECTS_C) $(GATRACE_OBJECTS_CXX)
	@rm -f $(GASWR_SOURCES_GEN_H) $(GASWR_SOURCES_GEN_S) $(GASWR_SOURCES_GEN_C) $(GASWR_SOURCES_GEN_CXX)
	@rm -f $(GASWR_AVX_OBJECTS_S) $(GASWR_AVX_OBJECTS_C) $(GASWR_AVX_OBJECTS_CXX)
	@rm -f $(GASWR_AVX2_OBJECTS_S) $(GASWR_AVX2_OBJECTS_C) $(GASWR_AVX2_OBJECTS_CXX)
	@rm -f $(GASWR_LIB_OBJECTS_S) $(GASWR_LIB_OBJECTS_C) $(GASWR_LIB_OBJECTS_CXX)
	@rm -f $(GAWINSYS_NULL_SOURCES_GEN_H) $(GAWINSYS_NULL_SOURCES_GEN_S) $(GAWINSYS_NULL_SOURCES_GEN_C) $(GAWINSYS_NULL_SOURCES_GEN_CXX)
	@rm -f $(GAWINSYS_NULL_OBJECTS_S) $(GAWINSYS_NULL_OBJECTS_C) $(GAWINSYS_NULL_OBJECTS_CXX)
	@rm -f $(GAWINSYS_WRAPPER_SOURCES_GEN_H) $(GAWINSYS_WRAPPER_SOURCES_GEN_S) $(GAWINSYS_WRAPPER_SOURCES_GEN_C) $(GAWINSYS_WRAPPER_SOURCES_GEN_CXX)
	@rm -f $(GAWINSYS_WRAPPER_OBJECTS_S) $(GAWINSYS_WRAPPER_OBJECTS_C) $(GAWINSYS_WRAPPER_OBJECTS_CXX)
	@rm -f $(GRAW_NULL_SOURCES_GEN_H) $(GRAW_NULL_SOURCES_GEN_S) $(GRAW_NULL_SOURCES_GEN_C) $(GRAW_NULL_SOURCES_GEN_CXX)
	@rm -f $(GRAW_NULL_OBJECTS_S) $(GRAW_NULL_OBJECTS_C) $(GRAW_NULL_OBJECTS_CXX)
	@rm -f $(GAST_OSMESA_SOURCES_GEN_H) $(GAST_OSMESA_SOURCES_GEN_S) $(GAST_OSMESA_SOURCES_GEN_C) $(GAST_OSMESA_SOURCES_GEN_CXX)
	@rm -f $(GAST_OSMESA_OBJECTS_S) $(GAST_OSMESA_OBJECTS_C) $(GAST_OSMESA_OBJECTS_CXX)
	@rm -f $(GA_OSMESA_SOURCES_GEN_H) $(GA_OSMESA_SOURCES_GEN_S) $(GA_OSMESA_SOURCES_GEN_C) $(GA_OSMESA_SOURCES_GEN_CXX)
	@rm -f $(GA_OSMESA_OBJECTS_S) $(GA_OSMESA_OBJECTS_C) $(GA_OSMESA_OBJECTS_CXX)