/**
 * Network Service
 * Provides the means to use networking by providing a socket interface.
 */
 
import "types"

namespace sys

enum close_options {
    READ,
    WRITE,
    DESTROY
}

enum address_type {
    THIS,
    PEER
}

service socket (8) {
    func create(int domain, int type, int protocol) : (oscode_t result, uuid_t handle, uuid_t recvHandle, uuid_t sendHandle) = 1;
    func close(uuid_t handle, close_options options) : (oscode_t result) = 2;
    func bind(uuid_t handle, uint8[] address) : (oscode_t result) = 3;
    func connect(uuid_t handle, uint8[] address) : (oscode_t result) = 4;
    func accept(uuid_t handle) : (oscode_t result, uint8[] address, uuid_t handle, uuid_t recvHandle, uuid_t sendHandle) = 5;
    func listen(uuid_t handle, int backlog) : (oscode_t result) = 6;
    func pair(uuid_t handle1, uuid_t handle2) : (oscode_t result) = 7;
    func set_option(uuid_t handle, int protocol, uint option, uint8[] data, int length) : (oscode_t result) = 8;
    func get_option(uuid_t handle, int protocol, uint option) : (oscode_t result, uint8[] data, int length) = 9;
    func get_address(uuid_t handle, address_type type) : (oscode_t result, uint8[] address) = 10;
}
