if(NOT DEFINED VALI_BUILD)
  cmake_minimum_required(VERSION 3.8.2)
  include(../../cmake/SetupEnvironment.cmake)
  project(vali-cxxrt NONE)
endif()

# Change some compiler setup first
enable_language(C)
enable_language(CXX)

# llvm package setup
set(PACKAGE_NAME vali-cxxrt)
set(PACKAGE_VERSION 9.0.0svn)
set(PACKAGE_STRING "${PACKAGE_NAME} ${PACKAGE_VERSION}")
set(PACKAGE_BUGREPORT "llvm-bugs@lists.llvm.org")

# Setup some configuration options for LLVM setup
set(LLVM_INCLUDE_TESTS OFF)
set(LLVM_LIBDIR_SUFFIX "")
set(LLVM_EXTERNAL_LIBCXX_SOURCE_DIR "${CMAKE_CURRENT_SOURCE_DIR}/libcxx")

set(LLVM_ENABLE_LIBCXX ON)
set(LLVM_ENABLE_EH ON CACHE BOOL "")
set(LLVM_ENABLE_RTTI ON CACHE BOOL "")
set(LLVM_EXPORT_SYMBOLS_FOR_PLUGINS ON CACHE BOOL "")
set(LLVM_CONFIG_PATH "$ENV{CROSS}/bin/llvm-config" CACHE FILEPATH "")

if("${VALI_BUILD}" STREQUAL "i386")
  set(LLVM_BUILD_32_BITS ON CACHE BOOL "")
else()
  set(LLVM_BUILD_32_BITS OFF CACHE BOOL "")
endif()

# Configure libunwind
set(LIBUNWIND_INCLUDE_DOCS OFF CACHE BOOL "")

# Configure libcxxabi
set(LIBCXXABI_VALI_BOOTSTRAP ON)
set(LIBCXXABI_HERMETIC_STATIC_LIBRARY ON CACHE BOOL "")
set(LIBCXXABI_USE_LLVM_UNWINDER ON CACHE BOOL "")
set(LIBCXXABI_HAS_EXTERNAL_THREAD_API ON CACHE BOOL "")

set(LIBCXXABI_LIBCXX_PATH "${CMAKE_CURRENT_SOURCE_DIR}/libcxx")
set(LIBCXXABI_LIBUNWIND_PATH "${CMAKE_CURRENT_SOURCE_DIR}/libunwind")

# Configure libcxx
set(LIBCXX_VALI_BOOTSTRAP ON)
set(LIBCXX_CXX_ABI libcxxabi)
set(LIBCXX_LIBCXXABI_INCLUDES_INTERNAL ${CMAKE_CURRENT_SOURCE_DIR}/libcxxabi/include)
set(LIBCXX_CXX_ABI_LIBRARY_PATH ${CMAKE_CURRENT_BINARY_DIR}/lib)
set(LIBCXX_HERMETIC_STATIC_LIBRARY ON CACHE BOOL "")
set(LIBCXX_ENABLE_STATIC_ABI_LIBRARY ON CACHE BOOL "")
set(LIBCXX_ENABLE_EXPERIMENTAL_LIBRARY OFF CACHE BOOL "")
set(LIBCXX_INCLUDE_BENCHMARKS OFF CACHE BOOL "")
set(LIBCXX_INCLUDE_DOCS OFF CACHE BOOL "")
set(LIBCXX_INCLUDE_TESTS OFF CACHE BOOL "")
set(LIBCXX_HAS_EXTERNAL_THREAD_API ON CACHE BOOL "")

# Clear the required system libraries, as we are bootstrapping
set(_OLD_CMAKE_C_STANDARD_LIBRARIES ${CMAKE_C_STANDARD_LIBRARIES})
set(_OLD_CMAKE_CXX_STANDARD_LIBRARIES ${CMAKE_CXX_STANDARD_LIBRARIES})
set(CMAKE_C_STANDARD_LIBRARIES "")
set(CMAKE_CXX_STANDARD_LIBRARIES "")

# include unwind library
add_subdirectory(libunwind)

# Include cxxabi library
add_subdirectory(libcxxabi)

# Include the cxx library, since this build depends on the output
# of libcxxabi
add_subdirectory(libcxx)

# Restore default link libraries
set(CMAKE_C_STANDARD_LIBRARIES ${_OLD_CMAKE_C_STANDARD_LIBRARIES})
set(CMAKE_CXX_STANDARD_LIBRARIES ${_OLD_CMAKE_CXX_STANDARD_LIBRARIES})
